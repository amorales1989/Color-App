{"version":3,"file":"static/js/main.f03e7f94.js","mappings":"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","sources":["src/home/Footer.js","src/home/home.js","src/components/AmbientesInteriores.js","src/components/AmbientesExteriores.js","src/components/OtrasSuperficies.js","src/components/AmbientesInteriores/MaterialesFerrosos/CiclosDeCalor/CiclosDeCalor.js","src/components/AmbientesInteriores/MaterialesFerrosos/MaterialesFerrosos.js","src/components/BibliotecaEsquemas.js","src/components/AmbientesInteriores/MaterialesFerrosos/CiclosDeCalor/Hasta200°C.js","src/home/Inicio.js","src/components/AmbientesInteriores/MaretrialeNoFerrosos/MaterialesNoFerrosos.js","src/components/AmbientesInteriores/Mamposteria/Mamposteria.js","src/components/AmbientesInteriores/Hormigon/Hormigon.js","src/components/AmbientesInteriores/Hormigon/Pisos/Pisos.js","src/components/AmbientesInteriores/Hormigon/Paredes/Paredes.js","src/components/AmbientesInteriores/Hormigon/Tanques Contenedores/Tanques Contenedores.js","src/components/AmbientesInteriores/MaterialesFerrosos/EquiposProductivos/EquiposProductivos.js","src/components/AmbientesInteriores/MaterialesFerrosos/EquiposNOproductivos/EquiposNoProductivos.js","src/components/AmbientesInteriores/MaterialesFerrosos/TanquesContenedores/TanquesContenedores.js","src/components/AmbientesInteriores/MaterialesFerrosos/CiclosDeCalor/Hasta400°C.js","src/components/AmbientesInteriores/MaterialesFerrosos/CiclosDeCalor/Hasta550°C.js","src/components/AmbientesInteriores/MaterialesFerrosos/EquiposProductivos/Normal.js","src/components/AmbientesInteriores/MaterialesFerrosos/EquiposProductivos/Moderado.js","src/components/AmbientesInteriores/MaterialesFerrosos/EquiposProductivos/Agresivo.js","src/components/AmbientesInteriores/MaterialesFerrosos/EquiposNOproductivos/Normal.js","src/components/AmbientesInteriores/MaterialesFerrosos/EquiposNOproductivos/Moderado.js","src/components/AmbientesInteriores/MaterialesFerrosos/EquiposNOproductivos/Agresivo.js","src/components/AmbientesInteriores/MaterialesFerrosos/TanquesContenedores/Agresivo.js","src/components/AmbientesInteriores/MaterialesFerrosos/TanquesContenedores/Moderado.js","src/components/AmbientesInteriores/MaterialesFerrosos/TanquesContenedores/Normal.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Alert, Dimensions } from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { useNavigation } from '@react-navigation/native';\nimport { BackHandler } from 'react-native';\n\nexport default function Footer() {\n    const navigation = useNavigation();\n\n    const handleHomePress = () => {\n        navigation.navigate('Home');\n    };\n\n    const handleBackPress = () => {\n        navigation.goBack();\n    }; \n\n    const handleClosePress = () => {\n        Alert.alert(\n            \"Salir\",\n            \"¿Estás seguro de que deseas cerrar la aplicación?\",\n            [\n                { text: \"Cancelar\", style: \"cancel\" },\n                { text: \"Salir\", onPress: () => BackHandler.exitApp() }\n            ]\n        );\n    };\n\n    return (\n        <View style={styles.footer}>\n            <TouchableOpacity style={styles.iconContainer} onPress={handleBackPress}>\n                <Icon name=\"arrow-left\" size={30} color=\"#FFFFFF\" />\n                <Text style={styles.iconText}>Atrás</Text>\n            </TouchableOpacity>\n            <TouchableOpacity style={styles.iconContainer} onPress={handleHomePress}>\n                <Icon name=\"home\" size={30} color=\"#FFFFFF\" />\n                <Text style={styles.iconText}>Home</Text>\n            </TouchableOpacity>\n            <TouchableOpacity style={styles.iconContainer} onPress={handleClosePress}>\n                <Icon name=\"close\" size={30} color=\"#FFFFFF\" />\n                <Text style={styles.iconText}>Salir</Text>\n            </TouchableOpacity>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    footer: {\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n        backgroundColor: '#333333',\n        paddingVertical: 10,\n        position: 'absolute',\n        bottom: 0,\n        width: Dimensions.get('window').width,\n    },\n    iconContainer: {\n        alignItems: 'center',\n    },\n    iconText: {\n        color: '#FFFFFF',\n        fontSize: 10,\n    },\n});\n","import React from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport Footer from './Footer';\n\nexport default function HomeScreen({ navigation }) {\n  return (\n    <>\n      <View style={styles.titleContainer}>\n        <Text style={styles.title}>Bienvenido</Text>\n      </View>\n      <View style={styles.container}>\n        <View style={styles.buttonContainer}>\n          <TouchableOpacity\n            style={styles.button}\n            onPress={() => navigation.navigate('AmbientesInteriores')}\n          >\n            <Text style={styles.buttonText}>Ambientes Interiores</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={styles.button}\n            onPress={() => navigation.navigate('AmbientesExteriores')}\n          >\n            <Text style={styles.buttonText}>Ambientes Exteriores</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={styles.button}\n            onPress={() => navigation.navigate('OtrasSuperficies')}\n          >\n            <Text style={styles.buttonText}>Otras Superficies</Text>\n          </TouchableOpacity>\n        </View>\n        <Footer />\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: 20, // Espacio con la parte superior de la pantalla\n  },\n  titleContainer: {\n    alignItems: 'center', // Centrar el título horizontalmente\n    marginTop: 100, // Espacio con la parte superior de la pantalla\n  },\n  title: {\n    fontSize: 34,\n    fontWeight: 'bold',\n  },\n  buttonContainer: {\n    alignItems: 'center',\n    width: '100%',\n  },\n  button: {\n    backgroundColor: '#3B5A7B', // Color de fondo del botón\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 8,\n    marginBottom: 10,\n    width: '80%',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 5 },\n    shadowOpacity: 0.3,\n    shadowRadius: 5,\n    elevation: 5,\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n  },\n});\n","import React from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\nimport Footer from '../home/Footer';\n\nexport default function AmbientesInteriores({ navigation }) {\n  return (\n    <><View style={styles.titleContainer}>\n      <Text style={styles.title}>Ambientes interiores</Text>\n    </View>\n      <View style={styles.container}>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => navigation.navigate('MaterialesFerrosos')}\n        >\n          <Text style={styles.buttonText}>Materiales Ferrosos/Acero</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => navigation.navigate('MaterialesNoFerrosos')}\n        >\n          <Text style={styles.buttonText}>Materiales no Ferrosos</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => navigation.navigate('Hormigon')}\n        >\n          <Text style={styles.buttonText}>Hormigon</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => navigation.navigate('Mamposteria')}\n        >\n          <Text style={styles.buttonText}>Mamposteria</Text>\n        </TouchableOpacity>\n        <Footer />\n      </View></>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  titleContainer: {\n    alignItems: 'center', // Centrar el título horizontalmente\n    marginTop: 100, // Espacio con la parte superior de la pantalla\n  },\n  title: {\n    fontSize: 34,\n    fontWeight: 'bold',\n  },\n  button: {\n    backgroundColor: '#3B5A7B', // Color de fondo del botón\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 8, // Redondeo de las esquinas\n    marginBottom: 10,\n    width: '80%', // Ancho del botón\n    alignItems: 'center', // Centrar el texto dentro del botón\n\n    // Sombra para iOS\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 5 },\n    shadowOpacity: 0.3,\n    shadowRadius: 5,\n\n    // Sombra para Android\n    elevation: 5,\n  },\n  buttonText: {\n    color: '#FFFFFF', // Color del texto\n    fontSize: 16,\n  },\n});\n","import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\nexport default function AmbientesExteriores({ navigation }) {\n  return (\n    <View style={styles.container}>\n      <Text>AmbientesExteriores</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\nexport default function OtrasSuperficies({ navigation }) {\n  return (\n    <View style={styles.container}>\n      <Text>OtrasSuperficies</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\nimport Footer from '../../../../home/Footer';\n\nexport default function CiclosDeCalor({ navigation }) {\n  return (\n    <>\n      <View style={styles.titleContainer}>\n        <Text style={styles.title1}>Ciclos de calor</Text>\n      </View>\n      <View style={styles.centerContainer}>\n        <Text style={styles.subtitle}>\n          Caderas, Tuberías de agua caliente, Tuberías de vapor, etc.\n        </Text>\n        <Text style={styles.title2}>Grado de Exposición</Text>\n      </View>\n      <View style={styles.buttonContainer}>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => navigation.navigate('Hasta200')}\n        >\n          <Text style={styles.buttonText}>Hasta 200° C</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => navigation.navigate('Hasta400')}\n        >\n          <Text style={styles.buttonText}>Hasta 400° C</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => navigation.navigate('Hasta550')}\n        >\n          <Text style={styles.buttonText}>Hasta 550° C</Text>\n        </TouchableOpacity>\n      </View>\n        <Footer />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 20,\n  },\n  titleContainer: {\n    alignItems: 'center',\n    marginTop: 100,\n  },\n  centerContainer: {\n    alignItems: 'center',\n    marginVertical: 20,\n  },\n  title1: {\n    fontSize: 35,\n    fontWeight: 'bold',\n  },\n  title2: {\n    fontSize: 25,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginTop: 100,\n   // marginBottom: -100,\n  },\n  subtitle: {\n    fontSize: 18,\n    textAlign: 'center',\n    marginTop: 20,\n    marginBottom: 30,\n    color: '#000000',\n    fontWeight: 'bold',\n    width: '70%',\n  },\n  buttonContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 20,\n},\n  button: {\n    backgroundColor: '#3B5A7B',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 8,\n    marginBottom: 10,\n    width: '80%',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 5 },\n    shadowOpacity: 0.3,\n    shadowRadius: 5,\n    elevation: 5,\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n  },\n});\n","import React from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\nimport Footer from '../../../home/Footer';\n\nexport default function MaterialesFerrosos({ navigation }) {\n  return (\n    <><View style={styles.titleContainer}>\n      <Text style={styles.title}>Materiales ferrosos/Acero</Text>\n    </View>\n      <View style={styles.container}>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => navigation.navigate('EquiposProductivos')}\n        >\n          <Text style={styles.buttonText}>Equipos Productivos</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => navigation.navigate('EquiposNoProductivos')}\n        >\n          <Text style={styles.buttonText}>Equipos NO Productivos</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => navigation.navigate('TanquesContenedoresMF')}\n        >\n          <Text style={styles.buttonText}>Tanques Contenedores</Text>\n          <Text style={styles.buttonText2}>(Parte exterior)</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => navigation.navigate('CiclosDeCalor')}\n        >\n          <Text style={styles.buttonText}>Ciclos de Calor</Text>\n        </TouchableOpacity>\n        <Footer />\n      </View></>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  titleContainer: {\n    alignItems: 'center',\n    marginTop: 100,\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n  },\n  button: {\n    backgroundColor: '#3B5A7B',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 8,\n    marginBottom: 10,\n    width: '80%',\n    alignItems: 'center',\n\n    // Sombra para iOS\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 5 },\n    shadowOpacity: 0.3,\n    shadowRadius: 5,\n\n    // Sombra para Android\n    elevation: 5,\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n  },\n  buttonText2: {\n    color: '#FFFFFF',\n    fontSize: 12,\n  },\n});\n","// bibliotecaEsquemas.js\nexport const esquemas = {\n    10: [\n        {\n            'Producto': 'Esmalte Epoxi',\n            'Cod. de Producto': '45-250-XX / 45-900-00',\n            'Prepa. de la sup.': 'SP1',\n            'Grado de Expocicion': 'Agresivo',\n            'Espesor seco Recomend. (mic)': '80-120',\n            'Espesor seco Total (mic)': '80-120',\n            'Volumen de solidos (%)': '54',\n            'Rendimiento Teórico(m2/l)': '5.4',\n        }\n    ],\n    39: [\n        {\n            'Producto': 'Epoxi Zinc Rich',\n            'Cod. de Producto': '45-122-00 / 45-900-08 / 45-970-01',\n            'Prepa. de la sup.': 'SP2',\n            'Grado de Expocicion': 'Moderado',\n            'Espesor seco Recomend. (mic)': '50-75',\n            'Espesor seco Total (mic)': '70-105',\n            'Volumen de solidos (%)': '52',\n            'Rendimiento Teórico(m2/l)': '8.3',\n        },\n        '----------------------------------',\n        {\n            'Producto': 'Laca Coil Siliconizada',\n            'Cod. de Producto': '45-170-XX',\n            'Prepa. de la sup.': 'SP2',\n            'Grado de Expocicion': 'Moderado',\n            'Espesor seco Recomend. (mic)': '20-30',\n            'Espesor seco Total (mic)': '70-105',\n            'Volumen de solidos (%)': '23',\n            'Rendimiento Teórico(m2/l)': '9.2',\n        }\n    ]\n\n\n    // Agrega más esquemas aquí...\n};\n","import React, { useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Modal, ScrollView } from 'react-native';\nimport { esquemas } from '../../../BibliotecaEsquemas';\nimport Footer from '../../../../home/Footer';\n\nexport default function Hasta200({ navigation }) {\n    const [modalVisible, setModalVisible] = useState(false);\n    const [modalContent, setModalContent] = useState([]);\n\n    const openModal = (esquemaId) => {\n        const esquema = esquemas[esquemaId];\n        if (esquema) {\n            let esquemaArray = [];\n            esquema.forEach(producto => {\n                esquemaArray.push(producto);\n            });\n            setModalContent(esquemaArray);\n            setModalVisible(true);\n        }\n    };\n\n    const buttons = ['10', '39'];\n\n    return (\n        <><View style={styles.titleContainer}>\n            <Text style={styles.title}>Hasta 200° C</Text>\n            <Text style={styles.title2}>Esquemas Amix Recomendados</Text>\n        </View>\n            <View style={styles.container}>\n                {buttons.length < 10 ? (\n                    <View style={styles.buttonContainer}>\n                        {buttons.map((text, index) => (\n                            <TouchableOpacity\n                                key={index}\n                                style={styles.button}\n                                onPress={() => openModal(text)}\n                            >\n                                <Text style={styles.buttonText}>{text}</Text>\n                            </TouchableOpacity>\n                        ))}\n                    </View>\n                ) : (\n                    <ScrollView contentContainerStyle={styles.buttonContainer}>\n                        {buttons.map((text, index) => (\n                            <TouchableOpacity\n                                key={index}\n                                style={styles.button}\n                                onPress={() => openModal(text)}\n                            >\n                                <Text style={styles.buttonText}>{text}</Text>\n                            </TouchableOpacity>\n                        ))}\n                    </ScrollView>\n                )}\n\n                <Modal\n                    transparent={true}\n                    visible={modalVisible}\n                    animationType=\"slide\"\n                    onRequestClose={() => setModalVisible(false)}\n                >\n                    <View style={styles.modalBackground}>\n                        <View style={styles.modalContainer}>\n                            {modalContent.map((content, index) => (\n                                <View key={index}>\n                                    {typeof content === 'object' ? (\n                                        Object.entries(content).map(([key, value], subIndex) => (\n                                            <Text key={subIndex} style={styles.modalText}>\n                                                <Text style={styles.modalTextBold}>{key}: </Text>\n                                                {value}\n                                            </Text>\n                                        ))\n                                    ) : (\n                                        <Text style={styles.modalSeparator}></Text>\n                                    )}\n                                </View>\n                            ))}\n                            <TouchableOpacity\n                                style={styles.closeButton}\n                                onPress={() => setModalVisible(false)}\n                            >\n                                <Text style={styles.closeButtonText}>Cerrar</Text>\n                            </TouchableOpacity>\n                        </View>\n                    </View>\n                </Modal>\n                <Footer />\n            </View></>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        marginTop: 50,\n    },\n    titleContainer: {\n        alignItems: 'center',\n        marginTop: 100,\n    },\n    title2: {\n        fontSize: 30,\n        fontWeight: 'bold',\n    },\n    title: {\n        fontSize: 30,\n        fontWeight: 'bold',\n        marginBottom: 70,\n        marginTop: 20,\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        paddingVertical: 20,\n    },\n    button: {\n        backgroundColor: '#3B5A7B', // Color de fondo del botón\n        paddingVertical: 20,\n        paddingHorizontal: 20,\n        borderRadius: 8, // Redondeo de las esquinas\n        margin: 5, // Espacio entre botones\n        alignItems: 'center', // Centrar el texto dentro del botón\n\n        // Sombra para iOS\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 5 },\n        shadowOpacity: 0.3,\n        shadowRadius: 5,\n\n        // Sombra para Android\n        elevation: 5,\n    },\n    buttonText: {\n        color: '#FFFFFF', // Color del texto\n        fontSize: 25,\n    },\n    modalBackground: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)', // Fondo semitransparente\n    },\n    modalContainer: {\n        width: '90%',\n        padding: 20,\n        backgroundColor: 'white',\n        borderRadius: 10,\n        alignItems: 'start',\n    },\n    modalText: {\n        fontSize: 18,\n        marginBottom: 5,\n    },\n    modalTextBold: {\n        fontWeight: 'bold',\n    },\n    closeButton: {\n        backgroundColor: '#3B5A7B', // Color de fondo del botón\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        borderRadius: 8,\n        marginTop: 20,\n        width: 100,\n        alignItems: 'center',\n        alignSelf: 'center',\n    },\n    closeButtonText: {\n        color: '#FFFFFF',\n        fontSize: 16,\n    },\n});\n","import React, { useEffect } from 'react';\nimport { View, Image, StyleSheet } from 'react-native';\n\nexport default function SplashScreen({ navigation }) {\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      navigation.replace('Home');\n    }, 4000);\n\n    return () => clearTimeout(timer); \n  }, [navigation]);\n\n  return (\n    <View style={styles.container}>\n      <Image\n        source={require('../../assets/color.gif')}\n        style={styles.gif}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#141414', // Color de fondo\n  },\n  gif: {\n    width: '100%',\n   \n  },\n});\n","import React, { useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Modal, ScrollView } from 'react-native';\nimport Footer from '../../../home/Footer';\nimport { esquemas } from '../../BibliotecaEsquemas';\n\nexport default function MaterialesNoFerrosos() {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [modalContent, setModalContent] = useState([]);\n\n  const openModal = (esquemaId) => {\n    const esquema = esquemas[esquemaId];\n    console\n    if (esquema) {\n      let esquemaArray = [];\n      esquema.forEach(producto => {\n        esquemaArray.push(producto);\n      });\n      setModalContent(esquemaArray);\n      setModalVisible(true);\n    }\n  };\n\n  const buttons = ['2', '3', '8', '9', '10', '17', '30', '42', '47'];\n\n  return (\n    <>\n      <View style={styles.titleContainer}>\n        <Text style={styles.title2}>Materiales NO Ferrosos</Text>\n        <Text style={styles.subtitle}>\n          Chapa galvanizada, Carpintería de aluminio, Ductos de ventilación, etc.\n        </Text>\n        <Text style={styles.title2}>Esquemas Amix Recomendados</Text>\n      </View>\n\n      <View style={styles.container}>\n\n        {buttons.length < 10 ? (\n          <View style={styles.buttonContainer}>\n            {buttons.map((text, index) => (\n              <TouchableOpacity\n                key={index}\n                style={styles.button}\n                onPress={() => openModal(text)}\n              >\n                <Text style={styles.buttonText}>{text}</Text>\n              </TouchableOpacity>\n            ))}\n          </View>\n        ) : (\n          <ScrollView contentContainerStyle={styles.buttonContainer}>\n\n            {buttons.map((text, index) => (\n              <TouchableOpacity\n                key={index}\n                style={styles.button}\n                onPress={() => openModal(text)}\n              >\n                <Text style={styles.buttonText}>{text}</Text>\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n        )}\n\n        <Modal\n          transparent={true}\n          visible={modalVisible}\n          animationType=\"slide\"\n          onRequestClose={() => setModalVisible(false)}\n        >\n          <View style={styles.modalBackground}>\n            <View style={styles.modalContainer}>\n              {modalContent.map((content, index) => (\n                <View key={index}>\n                  {typeof content === 'object' ? (\n                    Object.entries(content).map(([key, value], subIndex) => (\n                      <Text key={subIndex} style={styles.modalText}>\n                        <Text style={styles.modalTextBold}>{key}: </Text>\n                        {value}\n                      </Text>\n                    ))\n                  ) : (\n                    <Text style={styles.modalSeparator}></Text>\n                  )}\n                </View>\n              ))}\n              <TouchableOpacity\n                style={styles.closeButton}\n                onPress={() => setModalVisible(false)}\n              >\n                <Text style={styles.closeButtonText}>Cerrar</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </Modal>\n        <Footer />\n      </View></>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 50,\n  },\n\n  titleContainer: {\n    alignItems: 'center',\n    marginTop: 100,\n  },\n  title2: {\n    fontSize: 30,\n    fontWeight: 'bold',\n  },\n  subtitle: {\n    fontSize: 18, // Tamaño de letra tipo h3\n    textAlign: 'center', // Centrar el texto\n    marginTop: 20,\n    marginBottom: 30, // Espacio debajo del subtítulo\n    color: '#000000', // Color negro\n    fontWeight: 'bold', // Texto en negrita\n    width: '70%', // Ancho del texto\n\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    paddingVertical: 20,\n  },\n  button: {\n    backgroundColor: '#3B5A7B', // Color de fondo del botón\n    height: 70,\n    width: 70,\n    borderRadius: 8, // Redondeo de las esquinas\n    margin: 5, // Espacio entre botones\n    alignItems: 'center', // Centrar el texto dentro del botón\n    justifyContent: 'center', // Centrar verticalmente el contenido del botón\n\n    // Sombra para iOS\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 5 },\n    shadowOpacity: 0.3,\n    shadowRadius: 5,\n\n    // Sombra para Android\n    elevation: 5,\n  },\n\n  buttonText: {\n    color: '#FFFFFF', // Color del texto\n    fontSize: 25,\n  },\n  modalBackground: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)', // Fondo semitransparente\n  },\n  modalContainer: {\n    width: '90%',\n    padding: 20,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    alignItems: 'start',\n  },\n  modalText: {\n    fontSize: 18,\n    marginBottom: 5,\n  },\n  modalTextBold: {\n    fontWeight: 'bold',\n  },\n  closeButton: {\n    backgroundColor: '#3B5A7B', // Color de fondo del botón\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 8,\n    marginTop: 20,\n    width: 100,\n    alignItems: 'center',\n    alignSelf: 'center',\n  },\n  closeButtonText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n  },\n});\n","import React, { useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Modal, ScrollView } from 'react-native';\nimport Footer from '../../../home/Footer';\nimport { esquemas } from '../../BibliotecaEsquemas';\n\nexport default function Mamposteria() {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [modalContent, setModalContent] = useState([]);\n\n  const openModal = (esquemaId) => {\n    const esquema = esquemas[esquemaId];\n    console\n    if (esquema) {\n      let esquemaArray = [];\n      esquema.forEach(producto => {\n        esquemaArray.push(producto);\n      });\n      setModalContent(esquemaArray);\n      setModalVisible(true);\n    }\n  };\n\n  const buttons = ['1', '17', '20', '42', '47'];\n\n  return (\n    <>\n      <View style={styles.titleContainer}>\n        <Text style={styles.title2}>Mamposteria</Text>\n        <Text style={styles.subtitle}>\n        Paredes de oficinas, Aulas, Consultorios, Locales comerciales, Depósitos, Talleres, etc.\n        </Text>\n        <Text style={styles.title2}>Esquemas Amix Recomendados</Text>\n      </View>\n\n      <View style={styles.container}>\n\n        {buttons.length < 10 ? (\n          <View style={styles.buttonContainer}>\n            {buttons.map((text, index) => (\n              <TouchableOpacity\n                key={index}\n                style={styles.button}\n                onPress={() => openModal(text)}\n              >\n                <Text style={styles.buttonText}>{text}</Text>\n              </TouchableOpacity>\n            ))}\n          </View>\n        ) : (\n          <ScrollView contentContainerStyle={styles.buttonContainer}>\n\n            {buttons.map((text, index) => (\n              <TouchableOpacity\n                key={index}\n                style={styles.button}\n                onPress={() => openModal(text)}\n              >\n                <Text style={styles.buttonText}>{text}</Text>\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n        )}\n\n        <Modal\n          transparent={true}\n          visible={modalVisible}\n          animationType=\"slide\"\n          onRequestClose={() => setModalVisible(false)}\n        >\n          <View style={styles.modalBackground}>\n            <View style={styles.modalContainer}>\n              {modalContent.map((content, index) => (\n                <View key={index}>\n                  {typeof content === 'object' ? (\n                    Object.entries(content).map(([key, value], subIndex) => (\n                      <Text key={subIndex} style={styles.modalText}>\n                        <Text style={styles.modalTextBold}>{key}: </Text>\n                        {value}\n                      </Text>\n                    ))\n                  ) : (\n                    <Text style={styles.modalSeparator}></Text>\n                  )}\n                </View>\n              ))}\n              <TouchableOpacity\n                style={styles.closeButton}\n                onPress={() => setModalVisible(false)}\n              >\n                <Text style={styles.closeButtonText}>Cerrar</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </Modal>\n        <Footer />\n      </View></>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 50,\n  },\n\n  titleContainer: {\n    alignItems: 'center',\n    marginTop: 100,\n  },\n  title2: {\n    fontSize: 30,\n    fontWeight: 'bold',\n  },\n  subtitle: {\n    fontSize: 18, // Tamaño de letra tipo h3\n    textAlign: 'center', // Centrar el texto\n    marginTop: 20,\n    marginBottom: 30, // Espacio debajo del subtítulo\n    color: '#000000', // Color negro\n    fontWeight: 'bold', // Texto en negrita\n    width: '70%', // Ancho del texto\n\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    paddingVertical: 20,\n  },\n  button: {\n    backgroundColor: '#3B5A7B', // Color de fondo del botón\n    height: 70,\n    width: 70,\n    borderRadius: 8, // Redondeo de las esquinas\n    margin: 5, // Espacio entre botones\n    alignItems: 'center', // Centrar el texto dentro del botón\n    justifyContent: 'center', // Centrar verticalmente el contenido del botón\n\n    // Sombra para iOS\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 5 },\n    shadowOpacity: 0.3,\n    shadowRadius: 5,\n\n    // Sombra para Android\n    elevation: 5,\n  },\n\n  buttonText: {\n    color: '#FFFFFF', // Color del texto\n    fontSize: 25,\n  },\n  modalBackground: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)', // Fondo semitransparente\n  },\n  modalContainer: {\n    width: '90%',\n    padding: 20,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    alignItems: 'start',\n  },\n  modalText: {\n    fontSize: 18,\n    marginBottom: 5,\n  },\n  modalTextBold: {\n    fontWeight: 'bold',\n  },\n  closeButton: {\n    backgroundColor: '#3B5A7B', // Color de fondo del botón\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 8,\n    marginTop: 20,\n    width: 100,\n    alignItems: 'center',\n    alignSelf: 'center',\n  },\n  closeButtonText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n  },\n});\n","import React from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\nimport Footer from '../../../home/Footer';\n\nexport default function Hormigon({ navigation }) {\n  return (\n    <><View style={styles.titleContainer}>\n      <Text style={styles.title}>Hormigon</Text>\n    </View>\n      <View style={styles.container}>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => navigation.navigate('Pisos')}\n        >\n          <Text style={styles.buttonText}>Pisos</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => navigation.navigate('Paredes')}\n        >\n          <Text style={styles.buttonText}>Paredes Internas</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => navigation.navigate('TanquesContenedores')}\n        >\n          <Text style={styles.buttonText}>Tanques Contenedores</Text>\n          <Text style={styles.buttonText2}>(Parte exterior)</Text>\n        </TouchableOpacity>\n        <Footer />\n      </View></>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  titleContainer: {\n    alignItems: 'center',\n    marginTop: 100,\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n  },\n  button: {\n    backgroundColor: '#3B5A7B',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 8,\n    marginBottom: 10,\n    width: '80%',\n    alignItems: 'center',\n\n    // Sombra para iOS\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 5 },\n    shadowOpacity: 0.3,\n    shadowRadius: 5,\n\n    // Sombra para Android\n    elevation: 5,\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n  },\n  buttonText2: {\n    color: '#FFFFFF',\n    fontSize: 12,\n  },\n});\n","import React, { useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Modal, ScrollView } from 'react-native';\nimport Footer from '../../../../home/Footer';\nimport { esquemas } from '../../../BibliotecaEsquemas';\n\nexport default function Pisos() {\n    const [modalVisible, setModalVisible] = useState(false);\n    const [modalContent, setModalContent] = useState([]);\n\n    const openModal = (esquemaId) => {\n        const esquema = esquemas[esquemaId];\n        console\n        if (esquema) {\n            let esquemaArray = [];\n            esquema.forEach(producto => {\n                esquemaArray.push(producto);\n            });\n            setModalContent(esquemaArray);\n            setModalVisible(true);\n        }\n    };\n\n    const buttons = ['1', '17', '18', '40', '41', '42', '47'];\n\n    return (\n        <>\n            <View style={styles.titleContainer}>\n                <Text style={styles.title1}>Pisos</Text>\n                <Text style={styles.subtitle}>\n                    Locales comerciales de comidas y bebidas, Depósitos,Industria en general, Estacionamientos, Escuelas, Hospitales, etc.\n                </Text>\n                <Text style={styles.title2}>Esquemas Amix Recomendados</Text>\n            </View>\n\n            <View style={styles.container}>\n\n                {buttons.length < 10 ? (\n                    <View style={styles.buttonContainer}>\n                        {buttons.map((text, index) => (\n                            <TouchableOpacity\n                                key={index}\n                                style={styles.button}\n                                onPress={() => openModal(text)}\n                            >\n                                <Text style={styles.buttonText}>{text}</Text>\n                            </TouchableOpacity>\n                        ))}\n                    </View>\n                ) : (\n                    <ScrollView contentContainerStyle={styles.buttonContainer}>\n\n                        {buttons.map((text, index) => (\n                            <TouchableOpacity\n                                key={index}\n                                style={styles.button}\n                                onPress={() => openModal(text)}\n                            >\n                                <Text style={styles.buttonText}>{text}</Text>\n                            </TouchableOpacity>\n                        ))}\n                    </ScrollView>\n                )}\n\n                <Modal\n                    transparent={true}\n                    visible={modalVisible}\n                    animationType=\"slide\"\n                    onRequestClose={() => setModalVisible(false)}\n                >\n                    <View style={styles.modalBackground}>\n                        <View style={styles.modalContainer}>\n                            {modalContent.map((content, index) => (\n                                <View key={index}>\n                                    {typeof content === 'object' ? (\n                                        Object.entries(content).map(([key, value], subIndex) => (\n                                            <Text key={subIndex} style={styles.modalText}>\n                                                <Text style={styles.modalTextBold}>{key}: </Text>\n                                                {value}\n                                            </Text>\n                                        ))\n                                    ) : (\n                                        <Text style={styles.modalSeparator}></Text>\n                                    )}\n                                </View>\n                            ))}\n                            <TouchableOpacity\n                                style={styles.closeButton}\n                                onPress={() => setModalVisible(false)}\n                            >\n                                <Text style={styles.closeButtonText}>Cerrar</Text>\n                            </TouchableOpacity>\n                        </View>\n                    </View>\n                </Modal>\n                <Footer />\n            </View></>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        marginTop: 50,\n    },\n\n    titleContainer: {\n        alignItems: 'center',\n        marginTop: 100,\n    },\n    title2: {\n        fontSize: 25,\n        fontWeight: 'bold',\n    },\n    title1: {\n        fontSize: 35,\n        fontWeight: 'bold',\n    },\n    subtitle: {\n        fontSize: 18, // Tamaño de letra tipo h3\n        textAlign: 'center', // Centrar el texto\n        marginTop: 20,\n        marginBottom: 30, // Espacio debajo del subtítulo\n        color: '#000000', // Color negro\n        fontWeight: 'bold', // Texto en negrita\n        width: '70%', // Ancho del texto\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        paddingVertical: 20,\n    },\n    button: {\n        backgroundColor: '#3B5A7B', // Color de fondo del botón\n        height: 70,\n        width: 70,\n        borderRadius: 8, // Redondeo de las esquinas\n        margin: 5, // Espacio entre botones\n        alignItems: 'center', // Centrar el texto dentro del botón\n        justifyContent: 'center', // Centrar verticalmente el contenido del botón\n\n        // Sombra para iOS\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 5 },\n        shadowOpacity: 0.3,\n        shadowRadius: 5,\n\n        // Sombra para Android\n        elevation: 5,\n    },\n\n    buttonText: {\n        color: '#FFFFFF', // Color del texto\n        fontSize: 25,\n    },\n    modalBackground: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)', // Fondo semitransparente\n    },\n    modalContainer: {\n        width: '90%',\n        padding: 20,\n        backgroundColor: 'white',\n        borderRadius: 10,\n        alignItems: 'start',\n    },\n    modalText: {\n        fontSize: 18,\n        marginBottom: 5,\n    },\n    modalTextBold: {\n        fontWeight: 'bold',\n    },\n    closeButton: {\n        backgroundColor: '#3B5A7B', // Color de fondo del botón\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        borderRadius: 8,\n        marginTop: 20,\n        width: 100,\n        alignItems: 'center',\n        alignSelf: 'center',\n    },\n    closeButtonText: {\n        color: '#FFFFFF',\n        fontSize: 16,\n    },\n});\n","import React, { useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Modal, ScrollView } from 'react-native';\nimport Footer from '../../../../home/Footer';\nimport { esquemas } from '../../../BibliotecaEsquemas';\n\nexport default function Paredes() {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [modalContent, setModalContent] = useState([]);\n\n  const openModal = (esquemaId) => {\n    const esquema = esquemas[esquemaId];\n    console\n    if (esquema) {\n      let esquemaArray = [];\n      esquema.forEach(producto => {\n        esquemaArray.push(producto);\n      });\n      setModalContent(esquemaArray);\n      setModalVisible(true);\n    }\n  };\n\n  const buttons = ['1', '17', '20', '42', '47'];\n\n  return (\n    <>\n      <View style={styles.titleContainer}>\n        <Text style={styles.title1}>Paredes Internas</Text>\n        <Text style={styles.subtitle}>\n        Paredes de oficinas, Aulas, Consultorios, Locales comerciales, Depósitos, Talleres, etc.\n        </Text>\n        <Text style={styles.title2}>Esquemas Amix Recomendados</Text>\n      </View>\n\n      <View style={styles.container}>\n\n        {buttons.length < 10 ? (\n          <View style={styles.buttonContainer}>\n            {buttons.map((text, index) => (\n              <TouchableOpacity\n                key={index}\n                style={styles.button}\n                onPress={() => openModal(text)}\n              >\n                <Text style={styles.buttonText}>{text}</Text>\n              </TouchableOpacity>\n            ))}\n          </View>\n        ) : (\n          <ScrollView contentContainerStyle={styles.buttonContainer}>\n\n            {buttons.map((text, index) => (\n              <TouchableOpacity\n                key={index}\n                style={styles.button}\n                onPress={() => openModal(text)}\n              >\n                <Text style={styles.buttonText}>{text}</Text>\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n        )}\n\n        <Modal\n          transparent={true}\n          visible={modalVisible}\n          animationType=\"slide\"\n          onRequestClose={() => setModalVisible(false)}\n        >\n          <View style={styles.modalBackground}>\n            <View style={styles.modalContainer}>\n              {modalContent.map((content, index) => (\n                <View key={index}>\n                  {typeof content === 'object' ? (\n                    Object.entries(content).map(([key, value], subIndex) => (\n                      <Text key={subIndex} style={styles.modalText}>\n                        <Text style={styles.modalTextBold}>{key}: </Text>\n                        {value}\n                      </Text>\n                    ))\n                  ) : (\n                    <Text style={styles.modalSeparator}></Text>\n                  )}\n                </View>\n              ))}\n              <TouchableOpacity\n                style={styles.closeButton}\n                onPress={() => setModalVisible(false)}\n              >\n                <Text style={styles.closeButtonText}>Cerrar</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </Modal>\n        <Footer />\n      </View></>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 50,\n  },\n\n  titleContainer: {\n    alignItems: 'center',\n    marginTop: 100,\n  },\n  title2: {\n    fontSize: 25,\n    fontWeight: 'bold',\n  },\n  title1: {\n    fontSize: 35,\n    fontWeight: 'bold',\n  },\n  subtitle: {\n    fontSize: 18, // Tamaño de letra tipo h3\n    textAlign: 'center', // Centrar el texto\n    marginTop: 20,\n    marginBottom: 30, // Espacio debajo del subtítulo\n    color: '#000000', // Color negro\n    fontWeight: 'bold', // Texto en negrita\n    width: '70%', // Ancho del texto\n\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    paddingVertical: 20,\n  },\n  button: {\n    backgroundColor: '#3B5A7B', // Color de fondo del botón\n    height: 70,\n    width: 70,\n    borderRadius: 8, // Redondeo de las esquinas\n    margin: 5, // Espacio entre botones\n    alignItems: 'center', // Centrar el texto dentro del botón\n    justifyContent: 'center', // Centrar verticalmente el contenido del botón\n\n    // Sombra para iOS\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 5 },\n    shadowOpacity: 0.3,\n    shadowRadius: 5,\n\n    // Sombra para Android\n    elevation: 5,\n  },\n\n  buttonText: {\n    color: '#FFFFFF', // Color del texto\n    fontSize: 25,\n  },\n  modalBackground: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)', // Fondo semitransparente\n  },\n  modalContainer: {\n    width: '90%',\n    padding: 20,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    alignItems: 'start',\n  },\n  modalText: {\n    fontSize: 18,\n    marginBottom: 5,\n  },\n  modalTextBold: {\n    fontWeight: 'bold',\n  },\n  closeButton: {\n    backgroundColor: '#3B5A7B', // Color de fondo del botón\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 8,\n    marginTop: 20,\n    width: 100,\n    alignItems: 'center',\n    alignSelf: 'center',\n  },\n  closeButtonText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n  },\n});\n","import React, { useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Modal, ScrollView } from 'react-native';\nimport Footer from '../../../../home/Footer';\nimport { esquemas } from '../../../BibliotecaEsquemas';\n\nexport default function TanquesContenedores() {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [modalContent, setModalContent] = useState([]);\n\n  const openModal = (esquemaId) => {\n    const esquema = esquemas[esquemaId];\n    console\n    if (esquema) {\n      let esquemaArray = [];\n      esquema.forEach(producto => {\n        esquemaArray.push(producto);\n      });\n      setModalContent(esquemaArray);\n      setModalVisible(true);\n    }\n  };\n\n  const buttons = ['1', '11', '12', '17', '30', '31', '32', '42', '43', '44', '47'];\n\n  return (\n    <>\n      <View style={styles.titleContainer}>\n        <Text style={styles.title1}>Tanques contenedores</Text>\n        <Text style={styles.title3}>(PAREDES EXTERIORES)</Text>\n        <Text style={styles.subtitle}>\n        Tanques de agua, Resinas, Aceites, etc.\n        </Text>\n        <Text style={styles.title3}>A ser pintados externamente</Text>\n        <Text style={styles.title2}>Esquemas Amix Recomendados</Text>\n      </View>\n\n      <View style={styles.container}>\n\n        {buttons.length < 10 ? (\n          <View style={styles.buttonContainer}>\n            {buttons.map((text, index) => (\n              <TouchableOpacity\n                key={index}\n                style={styles.button}\n                onPress={() => openModal(text)}\n              >\n                <Text style={styles.buttonText}>{text}</Text>\n              </TouchableOpacity>\n            ))}\n          </View>\n        ) : (\n          <ScrollView contentContainerStyle={styles.buttonContainer}>\n\n            {buttons.map((text, index) => (\n              <TouchableOpacity\n                key={index}\n                style={styles.button}\n                onPress={() => openModal(text)}\n              >\n                <Text style={styles.buttonText}>{text}</Text>\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n        )}\n\n        <Modal\n          transparent={true}\n          visible={modalVisible}\n          animationType=\"slide\"\n          onRequestClose={() => setModalVisible(false)}\n        >\n          <View style={styles.modalBackground}>\n            <View style={styles.modalContainer}>\n              {modalContent.map((content, index) => (\n                <View key={index}>\n                  {typeof content === 'object' ? (\n                    Object.entries(content).map(([key, value], subIndex) => (\n                      <Text key={subIndex} style={styles.modalText}>\n                        <Text style={styles.modalTextBold}>{key}: </Text>\n                        {value}\n                      </Text>\n                    ))\n                  ) : (\n                    <Text style={styles.modalSeparator}></Text>\n                  )}\n                </View>\n              ))}\n              <TouchableOpacity\n                style={styles.closeButton}\n                onPress={() => setModalVisible(false)}\n              >\n                <Text style={styles.closeButtonText}>Cerrar</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </Modal>\n        <Footer />\n      </View></>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 50,\n  },\n\n  titleContainer: {\n    alignItems: 'center',\n    marginTop: 100,\n  },\n  title2: {\n    fontSize: 25,\n    fontWeight: 'bold',\n  },\n  title3: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    marginBottom: 30,\n  },\n  title1: {\n    fontSize: 35,\n    fontWeight: 'bold',\n  },\n  subtitle: {\n    fontSize: 18, // Tamaño de letra tipo h3\n    textAlign: 'center', // Centrar el texto\n   // marginTop: 20,\n   // marginBottom: 30, // Espacio debajo del subtítulo\n    color: '#000000', // Color negro\n    fontWeight: 'bold', // Texto en negrita\n    width: '70%', // Ancho del texto\n\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    paddingVertical: 20,\n  },\n  button: {\n    backgroundColor: '#3B5A7B', // Color de fondo del botón\n    height: 70,\n    width: 70,\n    borderRadius: 8, // Redondeo de las esquinas\n    margin: 5, // Espacio entre botones\n    alignItems: 'center', // Centrar el texto dentro del botón\n    justifyContent: 'center', // Centrar verticalmente el contenido del botón\n\n    // Sombra para iOS\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 5 },\n    shadowOpacity: 0.3,\n    shadowRadius: 5,\n\n    // Sombra para Android\n    elevation: 5,\n  },\n\n  buttonText: {\n    color: '#FFFFFF', // Color del texto\n    fontSize: 25,\n  },\n  modalBackground: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)', // Fondo semitransparente\n  },\n  modalContainer: {\n    width: '90%',\n    padding: 20,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    alignItems: 'start',\n  },\n  modalText: {\n    fontSize: 18,\n    marginBottom: 5,\n  },\n  modalTextBold: {\n    fontWeight: 'bold',\n  },\n  closeButton: {\n    backgroundColor: '#3B5A7B', // Color de fondo del botón\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 8,\n    marginTop: 20,\n    width: 100,\n    alignItems: 'center',\n    alignSelf: 'center',\n  },\n  closeButtonText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n  },\n});\n","import React from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\nimport Footer from '../../../../home/Footer';\n\nexport default function EquiposProductivos({ navigation }) {\n  return (\n    <>\n      <View style={styles.titleContainer}>\n        <Text style={styles.title1}>Equipos Productivos</Text>\n      </View>\n      <View style={styles.centerContainer}>\n        <Text style={styles.subtitle}>\n          Bombas, Envasadoras, Tornos, Lavadoras, Maquinaria en general.\n        </Text>\n        <Text style={styles.title2}>Grado de Exposición</Text>\n      </View>\n      <View style={styles.buttonContainer}>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => navigation.navigate('NormalEP')}\n        >\n          <Text style={styles.buttonText}>Normal</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => navigation.navigate('ModeradoEP')}\n        >\n          <Text style={styles.buttonText}>Moderado</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => navigation.navigate('AgresivoEP')}\n        >\n          <Text style={styles.buttonText}>Agresivo</Text>\n        </TouchableOpacity>\n      </View>\n        <Footer />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 20,\n  },\n  titleContainer: {\n    alignItems: 'center',\n    marginTop: 100,\n  },\n  centerContainer: {\n    alignItems: 'center',\n    marginVertical: 20,\n  },\n  title1: {\n    fontSize: 35,\n    fontWeight: 'bold',\n  },\n  title2: {\n    fontSize: 25,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginTop: 100,\n   // marginBottom: -100,\n  },\n  subtitle: {\n    fontSize: 18,\n    textAlign: 'center',\n    marginTop: 20,\n    marginBottom: 30,\n    color: '#000000',\n    fontWeight: 'bold',\n    width: '70%',\n  },\n  buttonContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 20,\n},\n  button: {\n    backgroundColor: '#3B5A7B',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 8,\n    marginBottom: 10,\n    width: '80%',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 5 },\n    shadowOpacity: 0.3,\n    shadowRadius: 5,\n    elevation: 5,\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n  },\n});\n","import React from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\nimport Footer from '../../../../home/Footer';\n\nexport default function EquiposNoProductivos({ navigation }) {\n  return (\n    <>\n      <View style={styles.titleContainer}>\n        <Text style={styles.title1}>Equipos no productivos</Text>\n      </View>\n      <View style={styles.centerContainer}>\n        <Text style={styles.subtitle}>\n          Escaleras, Columnas, Vigas, Montacargas, Barandas, Matafuegos, etc.\n        </Text>\n        <Text style={styles.title2}>Grado de Exposición</Text>\n      </View>\n      <View style={styles.buttonContainer}>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => navigation.navigate('NormalENP')}\n        >\n          <Text style={styles.buttonText}>Normal</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => navigation.navigate('ModeradoENP')}\n        >\n          <Text style={styles.buttonText}>Moderado</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => navigation.navigate('AgresivoENP')}\n        >\n          <Text style={styles.buttonText}>Agresivo</Text>\n        </TouchableOpacity>\n      </View>\n        <Footer />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 20,\n  },\n  titleContainer: {\n    alignItems: 'center',\n    marginTop: 100,\n  },\n  centerContainer: {\n    alignItems: 'center',\n    marginVertical: 20,\n  },\n  title1: {\n    fontSize: 35,\n    fontWeight: 'bold',\n  },\n  title2: {\n    fontSize: 25,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginTop: 100,\n   // marginBottom: -100,\n  },\n  subtitle: {\n    fontSize: 18,\n    textAlign: 'center',\n    marginTop: 20,\n    marginBottom: 30,\n    color: '#000000',\n    fontWeight: 'bold',\n    width: '70%',\n  },\n  buttonContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 20,\n},\n  button: {\n    backgroundColor: '#3B5A7B',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 8,\n    marginBottom: 10,\n    width: '80%',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 5 },\n    shadowOpacity: 0.3,\n    shadowRadius: 5,\n    elevation: 5,\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n  },\n});\n","import React from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\nimport Footer from '../../../../home/Footer';\n\nexport default function EquiposProductivos({ navigation }) {\n    return (\n        <>\n            <View style={styles.titleContainer}>\n                <Text style={styles.title1}>Tanques contenedores</Text>\n                <Text style={styles.title3}>(PAREDES EXTERIORES)</Text>\n            </View>\n            <View style={styles.centerContainer}>\n                <Text style={styles.subtitle}>\n                    Tanques de agua, Resinas, Aceites, etc.\n                </Text>\n                <Text style={styles.title3}>(A ser pintados externamente)</Text>\n                <Text style={styles.title2}>Grado de Exposición</Text>\n            </View>\n            <View style={styles.buttonContainer}>\n                <TouchableOpacity\n                    style={styles.button}\n                    onPress={() => navigation.navigate('NormalTC')}\n                >\n                    <Text style={styles.buttonText}>Normal</Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                    style={styles.button}\n                    onPress={() => navigation.navigate('ModeradoTC')}\n                >\n                    <Text style={styles.buttonText}>Moderado</Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                    style={styles.button}\n                    onPress={() => navigation.navigate('AgresivoTC')}\n                >\n                    <Text style={styles.buttonText}>Agresivo</Text>\n                </TouchableOpacity>\n            </View>\n            <Footer />\n        </>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        paddingHorizontal: 20,\n    },\n    titleContainer: {\n        alignItems: 'center',\n        marginTop: 100,\n    },\n    centerContainer: {\n        alignItems: 'center',\n        marginVertical: 20,\n    },\n    title1: {\n        fontSize: 35,\n        fontWeight: 'bold',\n    },\n    title2: {\n        fontSize: 25,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        marginTop: 70,\n        // marginBottom: -100,\n    },\n    title3: {\n        fontSize: 15,\n        fontWeight: 'bold',\n        \n    },\n    subtitle: {\n        fontSize: 18,\n        textAlign: 'center',\n        marginTop: 20,\n        color: '#000000',\n        fontWeight: 'bold',\n        width: '70%',\n    },\n    buttonContainer: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        paddingVertical: 20,\n    },\n    button: {\n        backgroundColor: '#3B5A7B',\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        borderRadius: 8,\n        marginBottom: 10,\n        width: '80%',\n        alignItems: 'center',\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 5 },\n        shadowOpacity: 0.3,\n        shadowRadius: 5,\n        elevation: 5,\n    },\n    buttonText: {\n        color: '#FFFFFF',\n        fontSize: 16,\n    },\n});\n","import React, { useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Modal, ScrollView } from 'react-native';\nimport { esquemas } from '../../../BibliotecaEsquemas';\nimport Footer from '../../../../home/Footer';\n\nexport default function Hasta400({ navigation }) {\n    const [modalVisible, setModalVisible] = useState(false);\n    const [modalContent, setModalContent] = useState([]);\n\n    const openModal = (esquemaId) => {\n        const esquema = esquemas[esquemaId];\n        if (esquema) {\n            let esquemaArray = [];\n            esquema.forEach(producto => {\n                esquemaArray.push(producto);\n            });\n            setModalContent(esquemaArray);\n            setModalVisible(true);\n        }\n    };\n\n    const buttons = ['50'];\n\n    return (\n        <><View style={styles.titleContainer}>\n            <Text style={styles.title}>Hasta 400° C</Text>\n            <Text style={styles.title2}>Esquemas Amix Recomendados</Text>\n        </View>\n            <View style={styles.container}>\n                {buttons.length < 10 ? (\n                    <View style={styles.buttonContainer}>\n                        {buttons.map((text, index) => (\n                            <TouchableOpacity\n                                key={index}\n                                style={styles.button}\n                                onPress={() => openModal(text)}\n                            >\n                                <Text style={styles.buttonText}>{text}</Text>\n                            </TouchableOpacity>\n                        ))}\n                    </View>\n                ) : (\n                    <ScrollView contentContainerStyle={styles.buttonContainer}>\n                        {buttons.map((text, index) => (\n                            <TouchableOpacity\n                                key={index}\n                                style={styles.button}\n                                onPress={() => openModal(text)}\n                            >\n                                <Text style={styles.buttonText}>{text}</Text>\n                            </TouchableOpacity>\n                        ))}\n                    </ScrollView>\n                )}\n\n                <Modal\n                    transparent={true}\n                    visible={modalVisible}\n                    animationType=\"slide\"\n                    onRequestClose={() => setModalVisible(false)}\n                >\n                    <View style={styles.modalBackground}>\n                        <View style={styles.modalContainer}>\n                            {modalContent.map((content, index) => (\n                                <View key={index}>\n                                    {typeof content === 'object' ? (\n                                        Object.entries(content).map(([key, value], subIndex) => (\n                                            <Text key={subIndex} style={styles.modalText}>\n                                                <Text style={styles.modalTextBold}>{key}: </Text>\n                                                {value}\n                                            </Text>\n                                        ))\n                                    ) : (\n                                        <Text style={styles.modalSeparator}></Text>\n                                    )}\n                                </View>\n                            ))}\n                            <TouchableOpacity\n                                style={styles.closeButton}\n                                onPress={() => setModalVisible(false)}\n                            >\n                                <Text style={styles.closeButtonText}>Cerrar</Text>\n                            </TouchableOpacity>\n                        </View>\n                    </View>\n                </Modal>\n                <Footer />\n            </View></>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        marginTop: 50,\n    },\n    titleContainer: {\n        alignItems: 'center',\n        marginTop: 100,\n    },\n    title2: {\n        fontSize: 30,\n        fontWeight: 'bold',\n    },\n    title: {\n        fontSize: 30,\n        fontWeight: 'bold',\n        marginBottom: 70,\n        marginTop: 20,\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        paddingVertical: 20,\n    },\n    button: {\n        backgroundColor: '#3B5A7B', // Color de fondo del botón\n        paddingVertical: 20,\n        paddingHorizontal: 20,\n        borderRadius: 8, // Redondeo de las esquinas\n        margin: 5, // Espacio entre botones\n        alignItems: 'center', // Centrar el texto dentro del botón\n\n        // Sombra para iOS\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 5 },\n        shadowOpacity: 0.3,\n        shadowRadius: 5,\n\n        // Sombra para Android\n        elevation: 5,\n    },\n    buttonText: {\n        color: '#FFFFFF', // Color del texto\n        fontSize: 25,\n    },\n    modalBackground: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)', // Fondo semitransparente\n    },\n    modalContainer: {\n        width: '90%',\n        padding: 20,\n        backgroundColor: 'white',\n        borderRadius: 10,\n        alignItems: 'start',\n    },\n    modalText: {\n        fontSize: 18,\n        marginBottom: 5,\n    },\n    modalTextBold: {\n        fontWeight: 'bold',\n    },\n    closeButton: {\n        backgroundColor: '#3B5A7B', // Color de fondo del botón\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        borderRadius: 8,\n        marginTop: 20,\n        width: 100,\n        alignItems: 'center',\n        alignSelf: 'center',\n    },\n    closeButtonText: {\n        color: '#FFFFFF',\n        fontSize: 16,\n    },\n});\n","import React, { useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Modal, ScrollView } from 'react-native';\nimport { esquemas } from '../../../BibliotecaEsquemas';\nimport Footer from '../../../../home/Footer';\n\nexport default function Hasta550({ navigation }) {\n    const [modalVisible, setModalVisible] = useState(false);\n    const [modalContent, setModalContent] = useState([]);\n\n    const openModal = (esquemaId) => {\n        const esquema = esquemas[esquemaId];\n        if (esquema) {\n            let esquemaArray = [];\n            esquema.forEach(producto => {\n                esquemaArray.push(producto);\n            });\n            setModalContent(esquemaArray);\n            setModalVisible(true);\n        }\n    };\n\n    const buttons = ['29'];\n\n    return (\n        <><View style={styles.titleContainer}>\n            <Text style={styles.title}>Hasta 550° C</Text>\n            <Text style={styles.title2}>Esquemas Amix Recomendados</Text>\n        </View>\n            <View style={styles.container}>\n                {buttons.length < 10 ? (\n                    <View style={styles.buttonContainer}>\n                        {buttons.map((text, index) => (\n                            <TouchableOpacity\n                                key={index}\n                                style={styles.button}\n                                onPress={() => openModal(text)}\n                            >\n                                <Text style={styles.buttonText}>{text}</Text>\n                            </TouchableOpacity>\n                        ))}\n                    </View>\n                ) : (\n                    <ScrollView contentContainerStyle={styles.buttonContainer}>\n                        {buttons.map((text, index) => (\n                            <TouchableOpacity\n                                key={index}\n                                style={styles.button}\n                                onPress={() => openModal(text)}\n                            >\n                                <Text style={styles.buttonText}>{text}</Text>\n                            </TouchableOpacity>\n                        ))}\n                    </ScrollView>\n                )}\n\n                <Modal\n                    transparent={true}\n                    visible={modalVisible}\n                    animationType=\"slide\"\n                    onRequestClose={() => setModalVisible(false)}\n                >\n                    <View style={styles.modalBackground}>\n                        <View style={styles.modalContainer}>\n                            {modalContent.map((content, index) => (\n                                <View key={index}>\n                                    {typeof content === 'object' ? (\n                                        Object.entries(content).map(([key, value], subIndex) => (\n                                            <Text key={subIndex} style={styles.modalText}>\n                                                <Text style={styles.modalTextBold}>{key}: </Text>\n                                                {value}\n                                            </Text>\n                                        ))\n                                    ) : (\n                                        <Text style={styles.modalSeparator}></Text>\n                                    )}\n                                </View>\n                            ))}\n                            <TouchableOpacity\n                                style={styles.closeButton}\n                                onPress={() => setModalVisible(false)}\n                            >\n                                <Text style={styles.closeButtonText}>Cerrar</Text>\n                            </TouchableOpacity>\n                        </View>\n                    </View>\n                </Modal>\n                <Footer />\n            </View></>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        marginTop: 50,\n    },\n    titleContainer: {\n        alignItems: 'center',\n        marginTop: 100,\n    },\n    title2: {\n        fontSize: 30,\n        fontWeight: 'bold',\n    },\n    title: {\n        fontSize: 30,\n        fontWeight: 'bold',\n        marginBottom: 70,\n        marginTop: 20,\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        paddingVertical: 20,\n    },\n    button: {\n        backgroundColor: '#3B5A7B', // Color de fondo del botón\n        paddingVertical: 20,\n        paddingHorizontal: 20,\n        borderRadius: 8, // Redondeo de las esquinas\n        margin: 5, // Espacio entre botones\n        alignItems: 'center', // Centrar el texto dentro del botón\n\n        // Sombra para iOS\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 5 },\n        shadowOpacity: 0.3,\n        shadowRadius: 5,\n\n        // Sombra para Android\n        elevation: 5,\n    },\n    buttonText: {\n        color: '#FFFFFF', // Color del texto\n        fontSize: 25,\n    },\n    modalBackground: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)', // Fondo semitransparente\n    },\n    modalContainer: {\n        width: '90%',\n        padding: 20,\n        backgroundColor: 'white',\n        borderRadius: 10,\n        alignItems: 'start',\n    },\n    modalText: {\n        fontSize: 18,\n        marginBottom: 5,\n    },\n    modalTextBold: {\n        fontWeight: 'bold',\n    },\n    closeButton: {\n        backgroundColor: '#3B5A7B', // Color de fondo del botón\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        borderRadius: 8,\n        marginTop: 20,\n        width: 100,\n        alignItems: 'center',\n        alignSelf: 'center',\n    },\n    closeButtonText: {\n        color: '#FFFFFF',\n        fontSize: 16,\n    },\n});\n","import React, { useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Modal, ScrollView } from 'react-native';\nimport { esquemas } from '../../../BibliotecaEsquemas';\nimport Footer from '../../../../home/Footer';\n\nexport default function NormalEP({ navigation }) {\n    const [modalVisible, setModalVisible] = useState(false);\n    const [modalContent, setModalContent] = useState([]);\n\n    const openModal = (esquemaId) => {\n        const esquema = esquemas[esquemaId];\n        if (esquema) {\n            let esquemaArray = [];\n            esquema.forEach(producto => {\n                esquemaArray.push(producto);\n            });\n            setModalContent(esquemaArray);\n            setModalVisible(true);\n        }\n    };\n\n    const buttons = [2, 3, 8, 9, 17, 25, 37, 38, 42, 47];\n\n    return (\n        <><View style={styles.titleContainer}>\n            <Text style={styles.title}>Normal</Text>\n            <Text style={styles.title2}>Esquemas Amix Recomendados</Text>\n        </View>\n            <View style={styles.container}>\n                {buttons.length < 10 ? (\n                    <View style={styles.buttonContainer}>\n                        {buttons.map((text, index) => (\n                            <TouchableOpacity\n                                key={index}\n                                style={styles.button}\n                                onPress={() => openModal(text)}\n                            >\n                                <Text style={styles.buttonText}>{text}</Text>\n                            </TouchableOpacity>\n                        ))}\n                    </View>\n                ) : (\n                    <ScrollView contentContainerStyle={styles.buttonContainer}>\n                        {buttons.map((text, index) => (\n                            <TouchableOpacity\n                                key={index}\n                                style={styles.button}\n                                onPress={() => openModal(text)}\n                            >\n                                <Text style={styles.buttonText}>{text}</Text>\n                            </TouchableOpacity>\n                        ))}\n                    </ScrollView>\n                )}\n\n                <Modal\n                    transparent={true}\n                    visible={modalVisible}\n                    animationType=\"slide\"\n                    onRequestClose={() => setModalVisible(false)}\n                >\n                    <View style={styles.modalBackground}>\n                        <View style={styles.modalContainer}>\n                            {modalContent.map((content, index) => (\n                                <View key={index}>\n                                    {typeof content === 'object' ? (\n                                        Object.entries(content).map(([key, value], subIndex) => (\n                                            <Text key={subIndex} style={styles.modalText}>\n                                                <Text style={styles.modalTextBold}>{key}: </Text>\n                                                {value}\n                                            </Text>\n                                        ))\n                                    ) : (\n                                        <Text style={styles.modalSeparator}></Text>\n                                    )}\n                                </View>\n                            ))}\n                            <TouchableOpacity\n                                style={styles.closeButton}\n                                onPress={() => setModalVisible(false)}\n                            >\n                                <Text style={styles.closeButtonText}>Cerrar</Text>\n                            </TouchableOpacity>\n                        </View>\n                    </View>\n                </Modal>\n                <Footer />\n            </View></>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        marginTop: 50,\n    },\n    titleContainer: {\n        alignItems: 'center',\n        marginTop: 100,\n    },\n    title2: {\n        fontSize: 30,\n        fontWeight: 'bold',\n    },\n    title: {\n        fontSize: 30,\n        fontWeight: 'bold',\n        marginBottom: 70,\n        marginTop: 20,\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        paddingVertical: 20,\n    },\n    button: {\n        backgroundColor: '#3B5A7B', // Color de fondo del botón\n        paddingVertical: 20,\n        paddingHorizontal: 20,\n        borderRadius: 8, // Redondeo de las esquinas\n        margin: 5, // Espacio entre botones\n        alignItems: 'center', // Centrar el texto dentro del botón\n\n        // Sombra para iOS\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 5 },\n        shadowOpacity: 0.3,\n        shadowRadius: 5,\n\n        // Sombra para Android\n        elevation: 5,\n    },\n    buttonText: {\n        color: '#FFFFFF', // Color del texto\n        fontSize: 25,\n    },\n    modalBackground: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)', // Fondo semitransparente\n    },\n    modalContainer: {\n        width: '90%',\n        padding: 20,\n        backgroundColor: 'white',\n        borderRadius: 10,\n        alignItems: 'start',\n    },\n    modalText: {\n        fontSize: 18,\n        marginBottom: 5,\n    },\n    modalTextBold: {\n        fontWeight: 'bold',\n    },\n    closeButton: {\n        backgroundColor: '#3B5A7B', // Color de fondo del botón\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        borderRadius: 8,\n        marginTop: 20,\n        width: 100,\n        alignItems: 'center',\n        alignSelf: 'center',\n    },\n    closeButtonText: {\n        color: '#FFFFFF',\n        fontSize: 16,\n    },\n});\n","import React, { useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Modal, ScrollView } from 'react-native';\nimport { esquemas } from '../../../BibliotecaEsquemas';\nimport Footer from '../../../../home/Footer';\n\nexport default function ModeradoEP({ navigation }) {\n    const [modalVisible, setModalVisible] = useState(false);\n    const [modalContent, setModalContent] = useState([]);\n\n    const openModal = (esquemaId) => {\n        const esquema = esquemas[esquemaId];\n        if (esquema) {\n            let esquemaArray = [];\n            esquema.forEach(producto => {\n                esquemaArray.push(producto);\n            });\n            setModalContent(esquemaArray);\n            setModalVisible(true);\n        }\n    };\n\n    const buttons = [2, 3, 11, 12, 14, 16, 17, 43, 44, 45, 46, 47];\n\n    return (\n        <><View style={styles.titleContainer}>\n            <Text style={styles.title}>Moderado</Text>\n            <Text style={styles.title2}>Esquemas Amix Recomendados</Text>\n        </View>\n            <View style={styles.container}>\n                {buttons.length < 10 ? (\n                    <View style={styles.buttonContainer}>\n                        {buttons.map((text, index) => (\n                            <TouchableOpacity\n                                key={index}\n                                style={styles.button}\n                                onPress={() => openModal(text)}\n                            >\n                                <Text style={styles.buttonText}>{text}</Text>\n                            </TouchableOpacity>\n                        ))}\n                    </View>\n                ) : (\n                    <ScrollView contentContainerStyle={styles.buttonContainer}>\n                        {buttons.map((text, index) => (\n                            <TouchableOpacity\n                                key={index}\n                                style={styles.button}\n                                onPress={() => openModal(text)}\n                            >\n                                <Text style={styles.buttonText}>{text}</Text>\n                            </TouchableOpacity>\n                        ))}\n                    </ScrollView>\n                )}\n\n                <Modal\n                    transparent={true}\n                    visible={modalVisible}\n                    animationType=\"slide\"\n                    onRequestClose={() => setModalVisible(false)}\n                >\n                    <View style={styles.modalBackground}>\n                        <View style={styles.modalContainer}>\n                            {modalContent.map((content, index) => (\n                                <View key={index}>\n                                    {typeof content === 'object' ? (\n                                        Object.entries(content).map(([key, value], subIndex) => (\n                                            <Text key={subIndex} style={styles.modalText}>\n                                                <Text style={styles.modalTextBold}>{key}: </Text>\n                                                {value}\n                                            </Text>\n                                        ))\n                                    ) : (\n                                        <Text style={styles.modalSeparator}></Text>\n                                    )}\n                                </View>\n                            ))}\n                            <TouchableOpacity\n                                style={styles.closeButton}\n                                onPress={() => setModalVisible(false)}\n                            >\n                                <Text style={styles.closeButtonText}>Cerrar</Text>\n                            </TouchableOpacity>\n                        </View>\n                    </View>\n                </Modal>\n                <Footer />\n            </View></>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        marginTop: 50,\n    },\n    titleContainer: {\n        alignItems: 'center',\n        marginTop: 100,\n    },\n    title2: {\n        fontSize: 30,\n        fontWeight: 'bold',\n    },\n    title: {\n        fontSize: 30,\n        fontWeight: 'bold',\n        marginBottom: 70,\n        marginTop: 20,\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        paddingVertical: 20,\n    },\n    button: {\n        backgroundColor: '#3B5A7B', // Color de fondo del botón\n        paddingVertical: 20,\n        paddingHorizontal: 20,\n        borderRadius: 8, // Redondeo de las esquinas\n        margin: 5, // Espacio entre botones\n        alignItems: 'center', // Centrar el texto dentro del botón\n\n        // Sombra para iOS\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 5 },\n        shadowOpacity: 0.3,\n        shadowRadius: 5,\n\n        // Sombra para Android\n        elevation: 5,\n    },\n    buttonText: {\n        color: '#FFFFFF', // Color del texto\n        fontSize: 25,\n    },\n    modalBackground: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)', // Fondo semitransparente\n    },\n    modalContainer: {\n        width: '90%',\n        padding: 20,\n        backgroundColor: 'white',\n        borderRadius: 10,\n        alignItems: 'start',\n    },\n    modalText: {\n        fontSize: 18,\n        marginBottom: 5,\n    },\n    modalTextBold: {\n        fontWeight: 'bold',\n    },\n    closeButton: {\n        backgroundColor: '#3B5A7B', // Color de fondo del botón\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        borderRadius: 8,\n        marginTop: 20,\n        width: 100,\n        alignItems: 'center',\n        alignSelf: 'center',\n    },\n    closeButtonText: {\n        color: '#FFFFFF',\n        fontSize: 16,\n    },\n});\n","import React, { useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Modal, ScrollView } from 'react-native';\nimport { esquemas } from '../../../BibliotecaEsquemas';\nimport Footer from '../../../../home/Footer';\n\nexport default function AgresivoEP({ navigation }) {\n    const [modalVisible, setModalVisible] = useState(false);\n    const [modalContent, setModalContent] = useState([]);\n\n    const openModal = (esquemaId) => {\n        const esquema = esquemas[esquemaId];\n        if (esquema) {\n            let esquemaArray = [];\n            esquema.forEach(producto => {\n                esquemaArray.push(producto);\n            });\n            setModalContent(esquemaArray);\n            setModalVisible(true);\n        }\n    };\n\n    const buttons = [11, 12, 13, 15, 19, 30, 31, 43, 44, 48];\n\n    return (\n        <><View style={styles.titleContainer}>\n            <Text style={styles.title}>Agresivo</Text>\n            <Text style={styles.title2}>Esquemas Amix Recomendados</Text>\n        </View>\n            <View style={styles.container}>\n                {buttons.length < 10 ? (\n                    <View style={styles.buttonContainer}>\n                        {buttons.map((text, index) => (\n                            <TouchableOpacity\n                                key={index}\n                                style={styles.button}\n                                onPress={() => openModal(text)}\n                            >\n                                <Text style={styles.buttonText}>{text}</Text>\n                            </TouchableOpacity>\n                        ))}\n                    </View>\n                ) : (\n                    <ScrollView contentContainerStyle={styles.buttonContainer}>\n                        {buttons.map((text, index) => (\n                            <TouchableOpacity\n                                key={index}\n                                style={styles.button}\n                                onPress={() => openModal(text)}\n                            >\n                                <Text style={styles.buttonText}>{text}</Text>\n                            </TouchableOpacity>\n                        ))}\n                    </ScrollView>\n                )}\n\n                <Modal\n                    transparent={true}\n                    visible={modalVisible}\n                    animationType=\"slide\"\n                    onRequestClose={() => setModalVisible(false)}\n                >\n                    <View style={styles.modalBackground}>\n                        <View style={styles.modalContainer}>\n                            {modalContent.map((content, index) => (\n                                <View key={index}>\n                                    {typeof content === 'object' ? (\n                                        Object.entries(content).map(([key, value], subIndex) => (\n                                            <Text key={subIndex} style={styles.modalText}>\n                                                <Text style={styles.modalTextBold}>{key}: </Text>\n                                                {value}\n                                            </Text>\n                                        ))\n                                    ) : (\n                                        <Text style={styles.modalSeparator}></Text>\n                                    )}\n                                </View>\n                            ))}\n                            <TouchableOpacity\n                                style={styles.closeButton}\n                                onPress={() => setModalVisible(false)}\n                            >\n                                <Text style={styles.closeButtonText}>Cerrar</Text>\n                            </TouchableOpacity>\n                        </View>\n                    </View>\n                </Modal>\n                <Footer />\n            </View></>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        marginTop: 50,\n    },\n    titleContainer: {\n        alignItems: 'center',\n        marginTop: 100,\n    },\n    title2: {\n        fontSize: 30,\n        fontWeight: 'bold',\n    },\n    title: {\n        fontSize: 30,\n        fontWeight: 'bold',\n        marginBottom: 70,\n        marginTop: 20,\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        paddingVertical: 20,\n    },\n    button: {\n        backgroundColor: '#3B5A7B', // Color de fondo del botón\n        paddingVertical: 20,\n        paddingHorizontal: 20,\n        borderRadius: 8, // Redondeo de las esquinas\n        margin: 5, // Espacio entre botones\n        alignItems: 'center', // Centrar el texto dentro del botón\n\n        // Sombra para iOS\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 5 },\n        shadowOpacity: 0.3,\n        shadowRadius: 5,\n\n        // Sombra para Android\n        elevation: 5,\n    },\n    buttonText: {\n        color: '#FFFFFF', // Color del texto\n        fontSize: 25,\n    },\n    modalBackground: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)', // Fondo semitransparente\n    },\n    modalContainer: {\n        width: '90%',\n        padding: 20,\n        backgroundColor: 'white',\n        borderRadius: 10,\n        alignItems: 'start',\n    },\n    modalText: {\n        fontSize: 18,\n        marginBottom: 5,\n    },\n    modalTextBold: {\n        fontWeight: 'bold',\n    },\n    closeButton: {\n        backgroundColor: '#3B5A7B', // Color de fondo del botón\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        borderRadius: 8,\n        marginTop: 20,\n        width: 100,\n        alignItems: 'center',\n        alignSelf: 'center',\n    },\n    closeButtonText: {\n        color: '#FFFFFF',\n        fontSize: 16,\n    },\n});\n","import React, { useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Modal, ScrollView } from 'react-native';\nimport { esquemas } from '../../../BibliotecaEsquemas';\nimport Footer from '../../../../home/Footer';\n\nexport default function NormalENP({ navigation }) {\n    const [modalVisible, setModalVisible] = useState(false);\n    const [modalContent, setModalContent] = useState([]);\n\n    const openModal = (esquemaId) => {\n        const esquema = esquemas[esquemaId];\n        if (esquema) {\n            let esquemaArray = [];\n            esquema.forEach(producto => {\n                esquemaArray.push(producto);\n            });\n            setModalContent(esquemaArray);\n            setModalVisible(true);\n        }\n    };\n\n    const buttons = [2, 3, 17, 25, 37, 38, 42, 47];\n\n    return (\n        <><View style={styles.titleContainer}>\n            <Text style={styles.title}>Normal</Text>\n            <Text style={styles.title2}>Esquemas Amix Recomendados</Text>\n        </View>\n            <View style={styles.container}>\n                {buttons.length < 10 ? (\n                    <View style={styles.buttonContainer}>\n                        {buttons.map((text, index) => (\n                            <TouchableOpacity\n                                key={index}\n                                style={styles.button}\n                                onPress={() => openModal(text)}\n                            >\n                                <Text style={styles.buttonText}>{text}</Text>\n                            </TouchableOpacity>\n                        ))}\n                    </View>\n                ) : (\n                    <ScrollView contentContainerStyle={styles.buttonContainer}>\n                        {buttons.map((text, index) => (\n                            <TouchableOpacity\n                                key={index}\n                                style={styles.button}\n                                onPress={() => openModal(text)}\n                            >\n                                <Text style={styles.buttonText}>{text}</Text>\n                            </TouchableOpacity>\n                        ))}\n                    </ScrollView>\n                )}\n\n                <Modal\n                    transparent={true}\n                    visible={modalVisible}\n                    animationType=\"slide\"\n                    onRequestClose={() => setModalVisible(false)}\n                >\n                    <View style={styles.modalBackground}>\n                        <View style={styles.modalContainer}>\n                            {modalContent.map((content, index) => (\n                                <View key={index}>\n                                    {typeof content === 'object' ? (\n                                        Object.entries(content).map(([key, value], subIndex) => (\n                                            <Text key={subIndex} style={styles.modalText}>\n                                                <Text style={styles.modalTextBold}>{key}: </Text>\n                                                {value}\n                                            </Text>\n                                        ))\n                                    ) : (\n                                        <Text style={styles.modalSeparator}></Text>\n                                    )}\n                                </View>\n                            ))}\n                            <TouchableOpacity\n                                style={styles.closeButton}\n                                onPress={() => setModalVisible(false)}\n                            >\n                                <Text style={styles.closeButtonText}>Cerrar</Text>\n                            </TouchableOpacity>\n                        </View>\n                    </View>\n                </Modal>\n                <Footer />\n            </View></>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        marginTop: 50,\n    },\n    titleContainer: {\n        alignItems: 'center',\n        marginTop: 100,\n    },\n    title2: {\n        fontSize: 30,\n        fontWeight: 'bold',\n    },\n    title: {\n        fontSize: 30,\n        fontWeight: 'bold',\n        marginBottom: 70,\n        marginTop: 20,\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        paddingVertical: 20,\n    },\n    button: {\n        backgroundColor: '#3B5A7B', // Color de fondo del botón\n        paddingVertical: 20,\n        paddingHorizontal: 20,\n        borderRadius: 8, // Redondeo de las esquinas\n        margin: 5, // Espacio entre botones\n        alignItems: 'center', // Centrar el texto dentro del botón\n\n        // Sombra para iOS\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 5 },\n        shadowOpacity: 0.3,\n        shadowRadius: 5,\n\n        // Sombra para Android\n        elevation: 5,\n    },\n    buttonText: {\n        color: '#FFFFFF', // Color del texto\n        fontSize: 25,\n    },\n    modalBackground: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)', // Fondo semitransparente\n    },\n    modalContainer: {\n        width: '90%',\n        padding: 20,\n        backgroundColor: 'white',\n        borderRadius: 10,\n        alignItems: 'start',\n    },\n    modalText: {\n        fontSize: 18,\n        marginBottom: 5,\n    },\n    modalTextBold: {\n        fontWeight: 'bold',\n    },\n    closeButton: {\n        backgroundColor: '#3B5A7B', // Color de fondo del botón\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        borderRadius: 8,\n        marginTop: 20,\n        width: 100,\n        alignItems: 'center',\n        alignSelf: 'center',\n    },\n    closeButtonText: {\n        color: '#FFFFFF',\n        fontSize: 16,\n    },\n});\n","import React, { useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Modal, ScrollView } from 'react-native';\nimport { esquemas } from '../../../BibliotecaEsquemas';\nimport Footer from '../../../../home/Footer';\n\nexport default function ModeradoENP({ navigation }) {\n    const [modalVisible, setModalVisible] = useState(false);\n    const [modalContent, setModalContent] = useState([]);\n\n    const openModal = (esquemaId) => {\n        const esquema = esquemas[esquemaId];\n        if (esquema) {\n            let esquemaArray = [];\n            esquema.forEach(producto => {\n                esquemaArray.push(producto);\n            });\n            setModalContent(esquemaArray);\n            setModalVisible(true);\n        }\n    };\n\n    const buttons = [2, 3, 17, 42, 47];\n\n    return (\n        <><View style={styles.titleContainer}>\n            <Text style={styles.title}>Moderado</Text>\n            <Text style={styles.title2}>Esquemas Amix Recomendados</Text>\n        </View>\n            <View style={styles.container}>\n                {buttons.length < 10 ? (\n                    <View style={styles.buttonContainer}>\n                        {buttons.map((text, index) => (\n                            <TouchableOpacity\n                                key={index}\n                                style={styles.button}\n                                onPress={() => openModal(text)}\n                            >\n                                <Text style={styles.buttonText}>{text}</Text>\n                            </TouchableOpacity>\n                        ))}\n                    </View>\n                ) : (\n                    <ScrollView contentContainerStyle={styles.buttonContainer}>\n                        {buttons.map((text, index) => (\n                            <TouchableOpacity\n                                key={index}\n                                style={styles.button}\n                                onPress={() => openModal(text)}\n                            >\n                                <Text style={styles.buttonText}>{text}</Text>\n                            </TouchableOpacity>\n                        ))}\n                    </ScrollView>\n                )}\n\n                <Modal\n                    transparent={true}\n                    visible={modalVisible}\n                    animationType=\"slide\"\n                    onRequestClose={() => setModalVisible(false)}\n                >\n                    <View style={styles.modalBackground}>\n                        <View style={styles.modalContainer}>\n                            {modalContent.map((content, index) => (\n                                <View key={index}>\n                                    {typeof content === 'object' ? (\n                                        Object.entries(content).map(([key, value], subIndex) => (\n                                            <Text key={subIndex} style={styles.modalText}>\n                                                <Text style={styles.modalTextBold}>{key}: </Text>\n                                                {value}\n                                            </Text>\n                                        ))\n                                    ) : (\n                                        <Text style={styles.modalSeparator}></Text>\n                                    )}\n                                </View>\n                            ))}\n                            <TouchableOpacity\n                                style={styles.closeButton}\n                                onPress={() => setModalVisible(false)}\n                            >\n                                <Text style={styles.closeButtonText}>Cerrar</Text>\n                            </TouchableOpacity>\n                        </View>\n                    </View>\n                </Modal>\n                <Footer />\n            </View></>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        marginTop: 50,\n    },\n    titleContainer: {\n        alignItems: 'center',\n        marginTop: 100,\n    },\n    title2: {\n        fontSize: 30,\n        fontWeight: 'bold',\n    },\n    title: {\n        fontSize: 30,\n        fontWeight: 'bold',\n        marginBottom: 70,\n        marginTop: 20,\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        paddingVertical: 20,\n    },\n    button: {\n        backgroundColor: '#3B5A7B', // Color de fondo del botón\n        paddingVertical: 20,\n        paddingHorizontal: 20,\n        borderRadius: 8, // Redondeo de las esquinas\n        margin: 5, // Espacio entre botones\n        alignItems: 'center', // Centrar el texto dentro del botón\n\n        // Sombra para iOS\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 5 },\n        shadowOpacity: 0.3,\n        shadowRadius: 5,\n\n        // Sombra para Android\n        elevation: 5,\n    },\n    buttonText: {\n        color: '#FFFFFF', // Color del texto\n        fontSize: 25,\n    },\n    modalBackground: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)', // Fondo semitransparente\n    },\n    modalContainer: {\n        width: '90%',\n        padding: 20,\n        backgroundColor: 'white',\n        borderRadius: 10,\n        alignItems: 'start',\n    },\n    modalText: {\n        fontSize: 18,\n        marginBottom: 5,\n    },\n    modalTextBold: {\n        fontWeight: 'bold',\n    },\n    closeButton: {\n        backgroundColor: '#3B5A7B', // Color de fondo del botón\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        borderRadius: 8,\n        marginTop: 20,\n        width: 100,\n        alignItems: 'center',\n        alignSelf: 'center',\n    },\n    closeButtonText: {\n        color: '#FFFFFF',\n        fontSize: 16,\n    },\n});\n","import React, { useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Modal, ScrollView } from 'react-native';\nimport { esquemas } from '../../../BibliotecaEsquemas';\nimport Footer from '../../../../home/Footer';\n\nexport default function AgresivoENP({ navigation }) {\n    const [modalVisible, setModalVisible] = useState(false);\n    const [modalContent, setModalContent] = useState([]);\n\n    const openModal = (esquemaId) => {\n        const esquema = esquemas[esquemaId];\n        if (esquema) {\n            let esquemaArray = [];\n            esquema.forEach(producto => {\n                esquemaArray.push(producto);\n            });\n            setModalContent(esquemaArray);\n            setModalVisible(true);\n        }\n    };\n\n    const buttons = [2, 3, 11, 12, 17, 30, 42, 43, 44, 47];\n\n    return (\n        <><View style={styles.titleContainer}>\n            <Text style={styles.title}>Agresivo</Text>\n            <Text style={styles.title2}>Esquemas Amix Recomendados</Text>\n        </View>\n            <View style={styles.container}>\n                {buttons.length < 10 ? (\n                    <View style={styles.buttonContainer}>\n                        {buttons.map((text, index) => (\n                            <TouchableOpacity\n                                key={index}\n                                style={styles.button}\n                                onPress={() => openModal(text)}\n                            >\n                                <Text style={styles.buttonText}>{text}</Text>\n                            </TouchableOpacity>\n                        ))}\n                    </View>\n                ) : (\n                    <ScrollView contentContainerStyle={styles.buttonContainer}>\n                        {buttons.map((text, index) => (\n                            <TouchableOpacity\n                                key={index}\n                                style={styles.button}\n                                onPress={() => openModal(text)}\n                            >\n                                <Text style={styles.buttonText}>{text}</Text>\n                            </TouchableOpacity>\n                        ))}\n                    </ScrollView>\n                )}\n\n                <Modal\n                    transparent={true}\n                    visible={modalVisible}\n                    animationType=\"slide\"\n                    onRequestClose={() => setModalVisible(false)}\n                >\n                    <View style={styles.modalBackground}>\n                        <View style={styles.modalContainer}>\n                            {modalContent.map((content, index) => (\n                                <View key={index}>\n                                    {typeof content === 'object' ? (\n                                        Object.entries(content).map(([key, value], subIndex) => (\n                                            <Text key={subIndex} style={styles.modalText}>\n                                                <Text style={styles.modalTextBold}>{key}: </Text>\n                                                {value}\n                                            </Text>\n                                        ))\n                                    ) : (\n                                        <Text style={styles.modalSeparator}></Text>\n                                    )}\n                                </View>\n                            ))}\n                            <TouchableOpacity\n                                style={styles.closeButton}\n                                onPress={() => setModalVisible(false)}\n                            >\n                                <Text style={styles.closeButtonText}>Cerrar</Text>\n                            </TouchableOpacity>\n                        </View>\n                    </View>\n                </Modal>\n                <Footer />\n            </View></>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        marginTop: 50,\n    },\n    titleContainer: {\n        alignItems: 'center',\n        marginTop: 100,\n    },\n    title2: {\n        fontSize: 30,\n        fontWeight: 'bold',\n    },\n    title: {\n        fontSize: 30,\n        fontWeight: 'bold',\n        marginBottom: 70,\n        marginTop: 20,\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        paddingVertical: 20,\n    },\n    button: {\n        backgroundColor: '#3B5A7B', // Color de fondo del botón\n        paddingVertical: 20,\n        paddingHorizontal: 20,\n        borderRadius: 8, // Redondeo de las esquinas\n        margin: 5, // Espacio entre botones\n        alignItems: 'center', // Centrar el texto dentro del botón\n\n        // Sombra para iOS\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 5 },\n        shadowOpacity: 0.3,\n        shadowRadius: 5,\n\n        // Sombra para Android\n        elevation: 5,\n    },\n    buttonText: {\n        color: '#FFFFFF', // Color del texto\n        fontSize: 25,\n    },\n    modalBackground: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)', // Fondo semitransparente\n    },\n    modalContainer: {\n        width: '90%',\n        padding: 20,\n        backgroundColor: 'white',\n        borderRadius: 10,\n        alignItems: 'start',\n    },\n    modalText: {\n        fontSize: 18,\n        marginBottom: 5,\n    },\n    modalTextBold: {\n        fontWeight: 'bold',\n    },\n    closeButton: {\n        backgroundColor: '#3B5A7B', // Color de fondo del botón\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        borderRadius: 8,\n        marginTop: 20,\n        width: 100,\n        alignItems: 'center',\n        alignSelf: 'center',\n    },\n    closeButtonText: {\n        color: '#FFFFFF',\n        fontSize: 16,\n    },\n});\n","import React, { useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Modal, ScrollView } from 'react-native';\nimport { esquemas } from '../../../BibliotecaEsquemas';\nimport Footer from '../../../../home/Footer';\n\nexport default function AgresivoTC({ navigation }) {\n    const [modalVisible, setModalVisible] = useState(false);\n    const [modalContent, setModalContent] = useState([]);\n\n    const openModal = (esquemaId) => {\n        const esquema = esquemas[esquemaId];\n        if (esquema) {\n            let esquemaArray = [];\n            esquema.forEach(producto => {\n                esquemaArray.push(producto);\n            }); \n            setModalContent(esquemaArray);\n            setModalVisible(true);\n        }\n    };\n\n    const buttons = [13, 15, 19, 30, 31, 33, 34, 36, 48];\n\n    return (\n        <><View style={styles.titleContainer}>\n            <Text style={styles.title}>Agresivo</Text>\n            <Text style={styles.title2}>Esquemas Amix Recomendados</Text>\n        </View>\n            <View style={styles.container}>\n                {buttons.length < 10 ? (\n                    <View style={styles.buttonContainer}>\n                        {buttons.map((text, index) => (\n                            <TouchableOpacity\n                                key={index}\n                                style={styles.button}\n                                onPress={() => openModal(text)}\n                            >\n                                <Text style={styles.buttonText}>{text}</Text>\n                            </TouchableOpacity>\n                        ))}\n                    </View>\n                ) : (\n                    <ScrollView contentContainerStyle={styles.buttonContainer}>\n                        {buttons.map((text, index) => (\n                            <TouchableOpacity\n                                key={index}\n                                style={styles.button}\n                                onPress={() => openModal(text)}\n                            >\n                                <Text style={styles.buttonText}>{text}</Text>\n                            </TouchableOpacity>\n                        ))}\n                    </ScrollView>\n                )}\n\n                <Modal\n                    transparent={true}\n                    visible={modalVisible}\n                    animationType=\"slide\"\n                    onRequestClose={() => setModalVisible(false)}\n                >\n                    <View style={styles.modalBackground}>\n                        <View style={styles.modalContainer}>\n                            {modalContent.map((content, index) => (\n                                <View key={index}>\n                                    {typeof content === 'object' ? (\n                                        Object.entries(content).map(([key, value], subIndex) => (\n                                            <Text key={subIndex} style={styles.modalText}>\n                                                <Text style={styles.modalTextBold}>{key}: </Text>\n                                                {value}\n                                            </Text>\n                                        ))\n                                    ) : (\n                                        <Text style={styles.modalSeparator}></Text>\n                                    )}\n                                </View>\n                            ))}\n                            <TouchableOpacity\n                                style={styles.closeButton}\n                                onPress={() => setModalVisible(false)}\n                            >\n                                <Text style={styles.closeButtonText}>Cerrar</Text>\n                            </TouchableOpacity>\n                        </View>\n                    </View>\n                </Modal>\n                <Footer />\n            </View></>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        marginTop: 50,\n    },\n    titleContainer: {\n        alignItems: 'center',\n        marginTop: 100,\n    },\n    title2: {\n        fontSize: 30,\n        fontWeight: 'bold',\n    },\n    title: {\n        fontSize: 30,\n        fontWeight: 'bold',\n        marginBottom: 70,\n        marginTop: 20,\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        paddingVertical: 20,\n    },\n    button: {\n        backgroundColor: '#3B5A7B', // Color de fondo del botón\n        paddingVertical: 20,\n        paddingHorizontal: 20,\n        borderRadius: 8, // Redondeo de las esquinas\n        margin: 5, // Espacio entre botones\n        alignItems: 'center', // Centrar el texto dentro del botón\n\n        // Sombra para iOS\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 5 },\n        shadowOpacity: 0.3,\n        shadowRadius: 5,\n\n        // Sombra para Android\n        elevation: 5,\n    },\n    buttonText: {\n        color: '#FFFFFF', // Color del texto\n        fontSize: 25,\n    },\n    modalBackground: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)', // Fondo semitransparente\n    },\n    modalContainer: {\n        width: '90%',\n        padding: 20,\n        backgroundColor: 'white',\n        borderRadius: 10,\n        alignItems: 'start',\n    },\n    modalText: {\n        fontSize: 18,\n        marginBottom: 5,\n    },\n    modalTextBold: {\n        fontWeight: 'bold',\n    },\n    closeButton: {\n        backgroundColor: '#3B5A7B', // Color de fondo del botón\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        borderRadius: 8,\n        marginTop: 20,\n        width: 100,\n        alignItems: 'center',\n        alignSelf: 'center',\n    },\n    closeButtonText: {\n        color: '#FFFFFF',\n        fontSize: 16,\n    },\n});\n","import React, { useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Modal, ScrollView } from 'react-native';\nimport { esquemas } from '../../../BibliotecaEsquemas';\nimport Footer from '../../../../home/Footer';\n\nexport default function ModeradoTC({ navigation }) {\n    const [modalVisible, setModalVisible] = useState(false);\n    const [modalContent, setModalContent] = useState([]);\n\n    const openModal = (esquemaId) => {\n        const esquema = esquemas[esquemaId];\n        if (esquema) {\n            let esquemaArray = [];\n            esquema.forEach(producto => {\n                esquemaArray.push(producto);\n            });\n            setModalContent(esquemaArray);\n            setModalVisible(true);\n        }\n    };\n\n    const buttons = [2, 3, 11, 12, 14, 16, 17, 32, 42, 43, 44, 45, 46, 47];\n\n    return (\n        <><View style={styles.titleContainer}>\n            <Text style={styles.title}>Moderado</Text>\n            <Text style={styles.title2}>Esquemas Amix Recomendados</Text>\n        </View>\n            <View style={styles.container}>\n                {buttons.length < 10 ? (\n                    <View style={styles.buttonContainer}>\n                        {buttons.map((text, index) => (\n                            <TouchableOpacity\n                                key={index}\n                                style={styles.button}\n                                onPress={() => openModal(text)}\n                            >\n                                <Text style={styles.buttonText}>{text}</Text>\n                            </TouchableOpacity>\n                        ))}\n                    </View>\n                ) : (\n                    <ScrollView contentContainerStyle={styles.buttonContainer}>\n                        {buttons.map((text, index) => (\n                            <TouchableOpacity\n                                key={index}\n                                style={styles.button}\n                                onPress={() => openModal(text)}\n                            >\n                                <Text style={styles.buttonText}>{text}</Text>\n                            </TouchableOpacity>\n                        ))}\n                    </ScrollView>\n                )}\n\n                <Modal\n                    transparent={true}\n                    visible={modalVisible}\n                    animationType=\"slide\"\n                    onRequestClose={() => setModalVisible(false)}\n                >\n                    <View style={styles.modalBackground}>\n                        <View style={styles.modalContainer}>\n                            {modalContent.map((content, index) => (\n                                <View key={index}>\n                                    {typeof content === 'object' ? (\n                                        Object.entries(content).map(([key, value], subIndex) => (\n                                            <Text key={subIndex} style={styles.modalText}>\n                                                <Text style={styles.modalTextBold}>{key}: </Text>\n                                                {value}\n                                            </Text>\n                                        ))\n                                    ) : (\n                                        <Text style={styles.modalSeparator}></Text>\n                                    )}\n                                </View>\n                            ))}\n                            <TouchableOpacity\n                                style={styles.closeButton}\n                                onPress={() => setModalVisible(false)}\n                            >\n                                <Text style={styles.closeButtonText}>Cerrar</Text>\n                            </TouchableOpacity>\n                        </View>\n                    </View>\n                </Modal>\n                <Footer />\n            </View></>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        marginTop: 50,\n    },\n    titleContainer: {\n        alignItems: 'center',\n        marginTop: 100,\n    },\n    title2: {\n        fontSize: 30,\n        fontWeight: 'bold',\n    },\n    title: {\n        fontSize: 30,\n        fontWeight: 'bold',\n        marginBottom: 70,\n        marginTop: 20,\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        paddingVertical: 20,\n    },\n    button: {\n        backgroundColor: '#3B5A7B', // Color de fondo del botón\n        paddingVertical: 20,\n        paddingHorizontal: 20,\n        borderRadius: 8, // Redondeo de las esquinas\n        margin: 5, // Espacio entre botones\n        alignItems: 'center', // Centrar el texto dentro del botón\n\n        // Sombra para iOS\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 5 },\n        shadowOpacity: 0.3,\n        shadowRadius: 5,\n\n        // Sombra para Android\n        elevation: 5,\n    },\n    buttonText: {\n        color: '#FFFFFF', // Color del texto\n        fontSize: 25,\n    },\n    modalBackground: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)', // Fondo semitransparente\n    },\n    modalContainer: {\n        width: '90%',\n        padding: 20,\n        backgroundColor: 'white',\n        borderRadius: 10,\n        alignItems: 'start',\n    },\n    modalText: {\n        fontSize: 18,\n        marginBottom: 5,\n    },\n    modalTextBold: {\n        fontWeight: 'bold',\n    },\n    closeButton: {\n        backgroundColor: '#3B5A7B', // Color de fondo del botón\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        borderRadius: 8,\n        marginTop: 20,\n        width: 100,\n        alignItems: 'center',\n        alignSelf: 'center',\n    },\n    closeButtonText: {\n        color: '#FFFFFF',\n        fontSize: 16,\n    },\n});\n","import React, { useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Modal, ScrollView } from 'react-native';\nimport { esquemas } from '../../../BibliotecaEsquemas';\nimport Footer from '../../../../home/Footer';\n\nexport default function NormalTC({ navigation }) {\n    const [modalVisible, setModalVisible] = useState(false);\n    const [modalContent, setModalContent] = useState([]);\n\n    const openModal = (esquemaId) => {\n        const esquema = esquemas[esquemaId];\n        if (esquema) {\n            let esquemaArray = [];\n            esquema.forEach(producto => {\n                esquemaArray.push(producto);\n            });\n            setModalContent(esquemaArray);\n            setModalVisible(true);\n        }\n    };\n\n    const buttons = [2, 3, 8, 9, 17, 25, 37, 38, 42, 47];\n\n    return (\n        <><View style={styles.titleContainer}>\n            <Text style={styles.title}>Normal</Text>\n            <Text style={styles.title2}>Esquemas Amix Recomendados</Text>\n        </View>\n            <View style={styles.container}>\n                {buttons.length < 10 ? (\n                    <View style={styles.buttonContainer}>\n                        {buttons.map((text, index) => (\n                            <TouchableOpacity\n                                key={index}\n                                style={styles.button}\n                                onPress={() => openModal(text)}\n                            >\n                                <Text style={styles.buttonText}>{text}</Text>\n                            </TouchableOpacity>\n                        ))}\n                    </View>\n                ) : (\n                    <ScrollView contentContainerStyle={styles.buttonContainer}>\n                        {buttons.map((text, index) => (\n                            <TouchableOpacity\n                                key={index}\n                                style={styles.button}\n                                onPress={() => openModal(text)}\n                            >\n                                <Text style={styles.buttonText}>{text}</Text>\n                            </TouchableOpacity>\n                        ))}\n                    </ScrollView>\n                )}\n\n                <Modal\n                    transparent={true}\n                    visible={modalVisible}\n                    animationType=\"slide\"\n                    onRequestClose={() => setModalVisible(false)}\n                >\n                    <View style={styles.modalBackground}>\n                        <View style={styles.modalContainer}>\n                            {modalContent.map((content, index) => (\n                                <View key={index}>\n                                    {typeof content === 'object' ? (\n                                        Object.entries(content).map(([key, value], subIndex) => (\n                                            <Text key={subIndex} style={styles.modalText}>\n                                                <Text style={styles.modalTextBold}>{key}: </Text>\n                                                {value}\n                                            </Text>\n                                        ))\n                                    ) : (\n                                        <Text style={styles.modalSeparator}></Text>\n                                    )}\n                                </View>\n                            ))}\n                            <TouchableOpacity\n                                style={styles.closeButton}\n                                onPress={() => setModalVisible(false)}\n                            >\n                                <Text style={styles.closeButtonText}>Cerrar</Text>\n                            </TouchableOpacity>\n                        </View>\n                    </View>\n                </Modal>\n                <Footer />\n            </View></>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        marginTop: 50,\n    },\n    titleContainer: {\n        alignItems: 'center',\n        marginTop: 100,\n    },\n    title2: {\n        fontSize: 30,\n        fontWeight: 'bold',\n    },\n    title: {\n        fontSize: 30,\n        fontWeight: 'bold',\n        marginBottom: 70,\n        marginTop: 20,\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        paddingVertical: 20,\n    },\n    button: {\n        backgroundColor: '#3B5A7B', // Color de fondo del botón\n        paddingVertical: 20,\n        paddingHorizontal: 20,\n        borderRadius: 8, // Redondeo de las esquinas\n        margin: 5, // Espacio entre botones\n        alignItems: 'center', // Centrar el texto dentro del botón\n\n        // Sombra para iOS\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 5 },\n        shadowOpacity: 0.3,\n        shadowRadius: 5,\n\n        // Sombra para Android\n        elevation: 5,\n    },\n    buttonText: {\n        color: '#FFFFFF', // Color del texto\n        fontSize: 25,\n    },\n    modalBackground: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)', // Fondo semitransparente\n    },\n    modalContainer: {\n        width: '90%',\n        padding: 20,\n        backgroundColor: 'white',\n        borderRadius: 10,\n        alignItems: 'start',\n    },\n    modalText: {\n        fontSize: 18,\n        marginBottom: 5,\n    },\n    modalTextBold: {\n        fontWeight: 'bold',\n    },\n    closeButton: {\n        backgroundColor: '#3B5A7B', // Color de fondo del botón\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        borderRadius: 8,\n        marginTop: 20,\n        width: 100,\n        alignItems: 'center',\n        alignSelf: 'center',\n    },\n    closeButtonText: {\n        color: '#FFFFFF',\n        fontSize: 16,\n    },\n});\n","import React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport HomeScreen from './src/home/home';\nimport AmbientesInteriores from './src/components/AmbientesInteriores';\nimport AmbientesExteriores from './src/components/AmbientesExteriores';\nimport OtrasSuperficies from './src/components/OtrasSuperficies';\nimport CiclosDeCalor from './src/components/AmbientesInteriores/MaterialesFerrosos/CiclosDeCalor/CiclosDeCalor';\nimport MaterialesFerrosos from './src/components/AmbientesInteriores/MaterialesFerrosos/MaterialesFerrosos';\nimport Hasta200 from './src/components/AmbientesInteriores/MaterialesFerrosos/CiclosDeCalor/Hasta200°C';\nimport SplashScreen from './src/home/Inicio'; \nimport MaterialesNoFerrosos from './src/components/AmbientesInteriores/MaretrialeNoFerrosos/MaterialesNoFerrosos';\nimport Mamposteria from './src/components/AmbientesInteriores/Mamposteria/Mamposteria';\nimport Hormigon from './src/components/AmbientesInteriores/Hormigon/Hormigon';\nimport Pisos from './src/components/AmbientesInteriores/Hormigon/Pisos/Pisos';\nimport Paredes from './src/components/AmbientesInteriores/Hormigon/Paredes/Paredes';\nimport TanquesContenedores from './src/components/AmbientesInteriores/Hormigon/Tanques Contenedores/Tanques Contenedores';\nimport EquiposProductivos from './src/components/AmbientesInteriores/MaterialesFerrosos/EquiposProductivos/EquiposProductivos';\nimport EquiposNoProductivos from './src/components/AmbientesInteriores/MaterialesFerrosos/EquiposNOproductivos/EquiposNoProductivos';\nimport TanquesContenedoresMF from './src/components/AmbientesInteriores/MaterialesFerrosos/TanquesContenedores/TanquesContenedores';\nimport Hasta400 from './src/components/AmbientesInteriores/MaterialesFerrosos/CiclosDeCalor/Hasta400°C';\nimport Hasta550 from './src/components/AmbientesInteriores/MaterialesFerrosos/CiclosDeCalor/Hasta550°C';\nimport NormalEP from './src/components/AmbientesInteriores/MaterialesFerrosos/EquiposProductivos/Normal';\nimport ModeradoEP from './src/components/AmbientesInteriores/MaterialesFerrosos/EquiposProductivos/Moderado';\nimport AgresivoEP from './src/components/AmbientesInteriores/MaterialesFerrosos/EquiposProductivos/Agresivo';\nimport NormalENP from './src/components/AmbientesInteriores/MaterialesFerrosos/EquiposNOproductivos/Normal';\nimport ModeradoENP from './src/components/AmbientesInteriores/MaterialesFerrosos/EquiposNOproductivos/Moderado';\nimport AgresivoENP from './src/components/AmbientesInteriores/MaterialesFerrosos/EquiposNOproductivos/Agresivo';\nimport AgresivoTC from './src/components/AmbientesInteriores/MaterialesFerrosos/TanquesContenedores/Agresivo';\nimport ModeradoTC from './src/components/AmbientesInteriores/MaterialesFerrosos/TanquesContenedores/Moderado';\nimport NormalTC from './src/components/AmbientesInteriores/MaterialesFerrosos/TanquesContenedores/Normal';\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Inicio\">\n        <Stack.Screen name=\"Home\" component={HomeScreen} options={{ headerShown: false }} />\n        <Stack.Screen name=\"Inicio\" component={SplashScreen} options={{ headerShown: false }}/>\n        <Stack.Screen name=\"AmbientesInteriores\" component={AmbientesInteriores} options={{ headerShown: false }} />\n        <Stack.Screen name=\"AmbientesExteriores\" component={AmbientesExteriores} options={{ headerShown: false }} />\n        <Stack.Screen name=\"OtrasSuperficies\" component={OtrasSuperficies} options={{ headerShown: false }} />\n        <Stack.Screen name=\"MaterialesFerrosos\" component={MaterialesFerrosos} options={{ headerShown: false }} />\n        <Stack.Screen name=\"EquiposProductivos\" component={EquiposProductivos} options={{ headerShown: false }} />\n        <Stack.Screen name=\"NormalEP\" component={NormalEP} options={{ headerShown: false }} />\n        <Stack.Screen name=\"ModeradoEP\" component={ModeradoEP} options={{ headerShown: false }} />\n        <Stack.Screen name=\"AgresivoEP\" component={AgresivoEP} options={{ headerShown: false }} />\n        <Stack.Screen name=\"EquiposNoProductivos\" component={EquiposNoProductivos} options={{ headerShown: false }} />\n        <Stack.Screen name=\"NormalENP\" component={NormalENP} options={{ headerShown: false }} />\n        <Stack.Screen name=\"ModeradoENP\" component={ModeradoENP} options={{ headerShown: false }} />\n        <Stack.Screen name=\"AgresivoENP\" component={AgresivoENP} options={{ headerShown: false }} />\n        <Stack.Screen name=\"TanquesContenedoresMF\" component={TanquesContenedoresMF} options={{ headerShown: false }} />\n        <Stack.Screen name=\"NormalTC\" component={NormalTC} options={{ headerShown: false }} />\n        <Stack.Screen name=\"ModeradoTC\" component={ModeradoTC} options={{ headerShown: false }} />\n        <Stack.Screen name=\"AgresivoTC\" component={AgresivoTC} options={{ headerShown: false }} />\n        <Stack.Screen name=\"CiclosDeCalor\" component={CiclosDeCalor} options={{ headerShown: false }} />\n        <Stack.Screen name=\"Hasta200\" component={Hasta200} options={{ headerShown: false }} />\n        <Stack.Screen name=\"Hasta400\" component={Hasta400} options={{ headerShown: false }} />\n        <Stack.Screen name=\"Hasta550\" component={Hasta550} options={{ headerShown: false }} />\n        <Stack.Screen name=\"MaterialesNoFerrosos\" component={MaterialesNoFerrosos} options={{ headerShown: false }} />\n        <Stack.Screen name=\"Mamposteria\" component={Mamposteria} options={{ headerShown: false }} />\n        <Stack.Screen name=\"Hormigon\" component={Hormigon} options={{ headerShown: false }} />\n        <Stack.Screen name=\"Pisos\" component={Pisos} options={{ headerShown: false }} />\n        <Stack.Screen name=\"Paredes\" component={Paredes} options={{ headerShown: false }} />\n        <Stack.Screen name=\"TanquesContenedores\" component={TanquesContenedores} options={{ headerShown: false }} />\n      </Stack.Navigator>\n      <StatusBar style=\"auto\" />\n    </NavigationContainer>\n  );\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [975], () => (__webpack_require__(5036)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Footer","navigation","useNavigation","_jsxs","View","style","styles","footer","children","TouchableOpacity","iconContainer","onPress","goBack","_jsx","Icon","name","size","color","Text","iconText","navigate","Alert","alert","text","BackHandler","exitApp","StyleSheet","create","flexDirection","justifyContent","alignItems","backgroundColor","paddingVertical","position","bottom","width","Dimensions","get","fontSize","HomeScreen","_ref","_Fragment","titleContainer","title","container","buttonContainer","button","buttonText","flex","paddingTop","marginTop","fontWeight","paddingHorizontal","borderRadius","marginBottom","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","AmbientesInteriores","AmbientesExteriores","OtrasSuperficies","CiclosDeCalor","title1","centerContainer","subtitle","title2","marginVertical","textAlign","MaterialesFerrosos","buttonText2","esquemas","Hasta200","_useState","useState","_useState2","_slicedToArray","modalVisible","setModalVisible","_useState3","_useState4","modalContent","setModalContent","openModal","esquemaId","esquema","esquemaArray","forEach","producto","push","buttons","length","map","index","ScrollView","contentContainerStyle","Modal","transparent","visible","animationType","onRequestClose","modalBackground","modalContainer","content","Object","entries","_ref2","subIndex","_ref3","key","value","modalText","modalTextBold","modalSeparator","closeButton","closeButtonText","flexWrap","margin","padding","alignSelf","SplashScreen","useEffect","timer","setTimeout","replace","clearTimeout","Image","source","require","gif","MaterialesNoFerrosos","console","Mamposteria","Hormigon","Pisos","Paredes","TanquesContenedores","title3","EquiposProductivos","EquiposNoProductivos","Hasta400","Hasta550","NormalEP","ModeradoEP","AgresivoEP","NormalENP","ModeradoENP","AgresivoENP","AgresivoTC","ModeradoTC","NormalTC","Stack","createStackNavigator","App","NavigationContainer","Navigator","initialRouteName","Screen","component","options","headerShown","TanquesContenedoresMF","StatusBar","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}